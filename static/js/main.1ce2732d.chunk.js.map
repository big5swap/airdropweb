{"version":3,"sources":["components/Header.js","generateElement.js","components/1.js","components/2.js","components/3.js","components/Transaction.js","components/approve.js","components/4.js","components/5.js","components/Retry.js","components/Welcome.js","components/Navigation.js","App.js","getWeb3.js","stores/web3Store.js","stores/tokenStore.js","stores/gasPriceStore.js","stores/txStore.js","stores/UiStore.js","index.js"],"names":["Header","inject","observer","state","multisenderAddress","defaultAccount","a","props","UiStore","tokenStore","proxyMultiSenderAddress","getDefultAccount","console","log","setState","explorerUrl","this","web3Store","className","href","htmlFor","target","rel","React","Component","generateElement","msg","errorNode","document","createElement","innerHTML","required","control","error","isChanged","isUsed","value","toString","trim","length","FirstStep","onNext","wizard","step","id","parseCompleted","onCsvChange","csv","parseAddresses","jsonAddresses","swal","title","text","icon","invalid_addresses","JSON","stringify","slice","push","message","txStore","setStartedUrl","onTokenAddress","bind","onDecimalsChange","format","placeholder","tokenAddress","label","onParse","addNextHandler","tokenInfoArray","userTokens","filter","t","tokenInfo","reduce","v","addresses","Object","keys","e","address","Web3Utils","isAddress","setTokenAddress","setDecimals","Promise","res","rej","csvtojson","noheader","fromString","on","el","defineProperty","writable","configurable","enumerable","setJsonAddresses","content","errors","Creatable","isLoading","loading","name","onChange","loadingPlaceholder","options","disabled","data-gram","validations","onBlur","createTheme","primary","secondary","fontFamily","background","default","context","divider","button","focus","hover","sortFocus","RecipientsDataTable","columns","selector","sortable","grow","tokenSymbol","left","theme","customStyles","pagination","style","marginBottom","cells","paginationPerPage","data","paginationTotalRows","ThirdStep","BN","totalBalance","gt","defAccTokenBalance","multisendGasEthValue","getMultisendPlusApproveGasEthValue","ethBalanceWei","toWei","ethBalance","displayMultisendGasEthValue","parseFloat","fromWei","toFixed","allowance","gte","onGasPriceChange","selected","gasPriceStore","setSelectedGasPrice","updateCurrentFee","onGasShareChange","setSelectedGasShare","gasPricesArray","gasPrice","transferGas","approveGas","multisendGas","gasSharesArray","dublicates","getTransferGas","totalNumberTx","addPerTx","arrayLimit","getMultisendGas","multisendGasOrig","Math","floor","parseInt","getApproveTxGas","getApproveGas","approveGasOrig","setTimeout","clearTimeout","_updateCurrentFeeImpl","standardInHex","approvePlusMultisendGas","plus","setCurrentFee","savedGas","minus","newCurrentFeeRounded","times","div","selectedGasShare","dp","displayValue","transferEthValue","displayTransferEthValue","savedGasEthValue","displaySavedGasEthValue","display","selectedGasPrice","padding","renderTokenBalance","renderTokenAllowance","addressesData","Transaction","classname","tx","hash","status","ApproveStep","intervalId","txs","doApprove","setInterval","clearInterval","txHashes","map","index","mined","FourthStep","location","reload","totalNumberOftx","calcTotalNumberOftx","doSendExecuted","doSend","Number","txCount","label2","onTxInput","txHash","getTxReceipt","txdata","type","Link","to","Navigation","render","next","previous","steps","onClick","App","nextHandlers","forEach","handler","ex","startedUrl","Redirect","pathname","Route","history","percent","indexOf","color","TransitionGroup","CSSTransition","classNames","timeout","enter","exit","_web3Config","_web3Promise","getWeb3","resolve","reject","window","addEventListener","hasOwnProperty","web3","Web3","givenProvider","eth","net","getId","then","netId","netIdName","trustApiName","ethereum","request","method","accounts","firstAccount","estimateGas","__proto__","call","web3Instance","injectedWeb3","catch","err","Web3Store","rootStore","userTokensInitialized","url","web3Config","getUserTokens","setExplorerUrl","blockchain_network","toLowerCase","api_suffix","api_domain","etherscanApiKey","fetch","json","result","tokens","tokensUniqueObj","i","token","tokensUnique","unshift","observable","action","require","TokenStore","getWeb3Promise","web3Obj","getMutiContractAdd","contractAddress","decimals","Contract","ERC20ABI","methods","balanceOf","multiplier","subscribe","getBalance","toFormat","symbol","currentFee","getCurrentFee","getEthBalance","getArrayLimit","getDecimals","getAllowance","getTokenSymbol","balances_to_send","addresses_to_send","filteredAddresses","account","replace","toChecksumAddress","balance","values","indexAddr","addr","obj","pow","ceil","computed","GasPriceStore","gasPricePromise","getGasPrices","toHex","TxStore","txHashToIndex","interval","approval","keepRunning","_approve","toJS","_multisend","getGasPrice","myGasPrice","totalBalanceWithDecimals","approve","send","from","once","receipt","getTxStatus","transactionHash","encodeABI","encodedData","transfer","totalGas","_getTransferGas","token_address","start","end","totalInWei","total","val","balances_to_send_sum","totalInEth","ethValue","MultiSenderAbi","multisender","multiTransfer_OST","gas","multiTransferToken_a4A","substring","getTransaction","txInfo","getTransactionReceipt","gasUsed","Root","HashRouter","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.1ce2732d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { inject, observer } from \"mobx-react\";\r\nimport GithubCorner from 'react-github-corner';\r\n\r\n@inject(\"UiStore\")\r\n@observer\r\nexport class Header extends React.Component {\r\n\r\n  state = {\r\n    multisenderAddress: null,\r\n    defaultAccount: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    (async () => {\r\n      const multisenderAddress = await this.props.UiStore.tokenStore.proxyMultiSenderAddress()\r\n      const defaultAccount = await this.props.UiStore.tokenStore.getDefultAccount()\r\n      console.log(\"Contract Address;\",multisenderAddress)\r\n      console.log(\"defaultAccount Address;\",defaultAccount)\r\n      this.setState({ multisenderAddress ,defaultAccount})\r\n    })()\r\n  }\r\n\r\n  render() {\r\n    const explorerUrl = this.props.UiStore.web3Store.explorerUrl || 'https://etherscan.io';\r\n\r\n    return (\r\n      <header className=\"header\">\r\n        <div className=\"multisend-container\">\r\n          <a href=\"#\" className=\"header-logo\"></a>\r\n          <form className=\"form form_header\">\r\n            {/* <Link className=\"button\" to='/retry'>Retry Failed Transaction</Link> */}\r\n            <label htmlFor=\"network\"\r\n              className=\"multisend-label\">Contract Address: <a target=\"_blank\" href={`${explorerUrl}/address/${this.state.multisenderAddress}`}>\r\n                {this.state.multisenderAddress}</a>\r\n            </label>\r\n            <label htmlFor=\"network\"\r\n              className=\"multisend-label\">Account Address: <a target=\"_blank\" href={`${explorerUrl}/address/${this.state.defaultAccount}`}>\r\n                {this.state.defaultAccount}</a>\r\n            </label>\r\n          </form>\r\n        </div>\r\n        <div className=\"multisend-container\">\r\n          Supports Mainnet, Ropsten, Rinkeby, Kovan, Goerli, Mumbai, Matic, Bscnain, Bsctest\r\n        </div>\r\n        <GithubCorner href=\"https://github.com/ativofinance/yardAirDrop\" target=\"_blank\" rel=\"nofollow\" />\r\n      </header>\r\n    )\r\n  }\r\n}\r\n","export default function generateElement(msg){\r\n  let errorNode = document.createElement(\"div\");\r\n  errorNode.innerHTML = `${msg}`;\r\n  return errorNode;\r\n}","import React from 'react';\r\nimport Web3Utils from 'web3-utils';\r\nimport Form from 'react-validation/build/form';\r\nimport Textarea from 'react-validation/build/textarea';\r\nimport Button from 'react-validation/build/button';\r\nimport { form, control, button } from 'react-validation';\r\nimport { inject, observer } from \"mobx-react\";\r\nimport swal from 'sweetalert';\r\nimport generateElement from '../generateElement'\r\nimport Example from './example.json'\r\n// import { PulseLoader} from 'react-spinners';\r\nimport { RadioGroup, Radio } from 'react-radio-group';\r\nimport csvtojson from 'csvtojson'\r\nimport Select from 'react-select'\r\nimport '../assets/stylesheets/react-select.min.css';\r\n\r\n\r\nconst ownInput = ({ error, isChanged, isUsed, ...props }) => (\r\n  <div>\r\n    {isChanged && isUsed && error}\r\n    <input {...props} />\r\n  </div>\r\n);\r\nconst Input = control(ownInput);\r\n\r\nconst required = (value) => {\r\n  if (!value.toString().trim().length) {\r\n    return <span className=\"error\">required</span>;\r\n  }\r\n};\r\n\r\nconst isAddress = (value) => {\r\n  if (!Web3Utils.isAddress(value)) {\r\n    return <span className=\"error\">Token address is invalid</span>;\r\n  }\r\n};\r\n// const InvalidJSON = <div>Your JSON is invalid, please visit <a href=\"https://jsonlint.com/\" target=\"_blank\">Online Json Validator</a></div>\r\n\r\n// const isJson = (value) => {\r\n//   try {\r\n//     JSON.parse(value)\r\n//   } catch(e) {\r\n//     return InvalidJSON\r\n//   }\r\n// };\r\n\r\n@inject(\"UiStore\")\r\n@observer\r\nexport class FirstStep extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.tokenStore = props.UiStore.tokenStore;\r\n    this.txStore = props.UiStore.txStore;\r\n    this.web3Store = props.UiStore.web3Store;\r\n    this.web3Store.setStartedUrl('#/');\r\n    this.onTokenAddress = this.onTokenAddress.bind(this);\r\n    this.onDecimalsChange = this.onDecimalsChange.bind(this);\r\n    // this.onJsonChange = this.onJsonChange.bind(this);\r\n    this.state = {\r\n      format: 'csv',\r\n      placeholder: `\r\n0xCBA5018De6b2b6F89d84A1F5A68953f07554765e,12\r\n0xa6Bf70bd230867c870eF13631D7EFf1AE8Ab85c9,1123.45645\r\n0x00b5F428905DEA1a67940093fFeaCeee58cA91Ae,1.049\r\n0x00fC79F38bAf0dE21E1fee5AC4648Bc885c1d774,14546\r\n`,\r\n      tokenAddress: { label: '', value: null },\r\n      csv: \"\"\r\n    }\r\n    // this.onSelectFormat = this.onSelectFormat.bind(this)\r\n    this.onParse = this.onParse.bind(this)\r\n    this.parseCompleted = false;\r\n    // this.list = [];\r\n\r\n    this.props.addNextHandler(this.onNext)\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.tokenStore.reset()\r\n    // this.txStore.reset()\r\n\r\n    if ('' !== this.tokenStore.tokenAddress) {\r\n      const tokenInfoArray = this.web3Store.userTokens.filter(t => {\r\n        return t.value === this.tokenStore.tokenAddress\r\n      })\r\n      if (tokenInfoArray.length > 0) {\r\n        const tokenInfo = tokenInfoArray[0]\r\n        this.setState({ tokenAddress: { ...tokenInfo } })\r\n      }\r\n    }\r\n\r\n    if (this.tokenStore.jsonAddresses.length > 0) {\r\n      const csv = this.tokenStore.jsonAddresses.reduce((csv, v) => {\r\n        const addresses = Object.keys(v)\r\n        const val = addresses[0] + \",\" + v[addresses[0]]\r\n        return csv + val + \"\\n\"\r\n      }, \"\")\r\n      this.setState({ csv: csv })\r\n    }\r\n  }\r\n  async onTokenAddress(e) {\r\n    if (!e) {\r\n      this.setState({ tokenAddress: { label: '', value: '' } })\r\n      return\r\n    }\r\n    const address = e.value;\r\n    if (Web3Utils.isAddress(address)) {\r\n      await this.tokenStore.setTokenAddress(address);\r\n      this.setState({ tokenAddress: { label: e.label, value: e.value } })\r\n    }\r\n  }\r\n  //   onSelectFormat(newFormat){\r\n  //     this.parseCompleted = false;\r\n  //     if(newFormat === 'csv'){\r\n  //       this.setState({format: newFormat, placeholder: `\r\n  // 0xCBA5018De6b2b6F89d84A1F5A68953f07554765e,12\r\n  // 0xa6Bf70bd230867c870eF13631D7EFf1AE8Ab85c9,1123.45645\r\n  // 0x00b5F428905DEA1a67940093fFeaCeee58cA91Ae,1.049\r\n  // 0x00fC79F38bAf0dE21E1fee5AC4648Bc885c1d774,14546\r\n  //   `})\r\n  //     swal(\"Information\", `Please provide CSV file in comma separated address,balance format one line per address.\r\n  //     \\nExample:\\n\r\n  // 0xCBA5018De6b2b6F89d84A1F5A68953f07554765e,12\r\n  // 0xa6Bf70bd230867c870eF13631D7EFf1AE8Ab85c9,113.45\r\n  // 0x00b5F428905DEA1a67940093fFeaCeee58cA91Ae,1.049\r\n  // 0x00fC79F38bAf0dE21E1fee5AC4648Bc885c1d774,14546\r\n  //     `, 'info')\r\n  //     } else {\r\n  //       this.setState({format: newFormat, placeholder: JSON.stringify(Example)})\r\n  //       swal({\r\n  //         content: generateElement(`<div style=\"color:black;\">\r\n  //         Please provide JSON-array file in the following format.\r\n  //         \\nExample:\\n\r\n  //         <div style=\"font-size: 12px;color:purple;\">\r\n  //         [<br/>\r\n  //           {\"0xCBA5018De6b2b6F89d84A1F5A68953f07554765e\":\"12\"},\r\n  //           {\"0xa6Bf70bd230867c870eF13631D7EFf1AE8Ab85c9\":\"1123.45645\"},\r\n  //           {\"0x00b5F428905DEA1a67940093fFeaCeee58cA91Ae\":\"1.049\"},\r\n  //           {\"0x00fC79F38bAf0dE21E1fee5AC4648Bc885c1d774\":\"14546\"}\r\n  //           <br/>]\r\n  //         </div>\r\n  //         </div>\r\n  //         `),\r\n  //         icon: 'info'\r\n  //       })\r\n  //\r\n  //     }\r\n  //   }\r\n  onDecimalsChange(e) {\r\n    this.tokenStore.setDecimals(e.target.value)\r\n  }\r\n\r\n  // onJsonChange(value) {\r\n  //   try {\r\n  //     let addresses = JSON.parse(value);\r\n  //     this.tokenStore.setJsonAddresses(addresses)\r\n  //     this.parseCompleted = true;\r\n  //   } catch(e) {\r\n  //     const error = e.message.replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t');\r\n  //     console.error(error)\r\n  //     swal({\r\n  //       content: generateElement(`${error} Please visit <a target=\"_blank\" href=\"https://jsonlint.com\">JsonLint.com</a>`),\r\n  //       icon: \"error\",\r\n  //     })\r\n  //   }\r\n  // }\r\n\r\n  async onCsvChange(value) {\r\n    return new Promise((res, rej) => {\r\n      let addresses = [];\r\n      csvtojson({ noheader: true })\r\n        .fromString(value)\r\n        .on('csv', (csv) => {\r\n          let el = {};\r\n          if (csv.length === 2) {\r\n            Object.defineProperty(el, csv[0], {\r\n              value: csv[1],\r\n              writable: true,\r\n              configurable: true,\r\n              enumerable: true,\r\n            });\r\n            addresses.push(el)\r\n          }\r\n        })\r\n        .on('end', () => {\r\n          try {\r\n            console.log('csv is done')\r\n            this.parseCompleted = true;\r\n            this.tokenStore.setJsonAddresses(addresses)\r\n            res(addresses);\r\n          } catch (e) {\r\n            console.error(e)\r\n            rej(e);\r\n            swal({\r\n              content: \"Your CSV is invalid\",\r\n              icon: \"error\",\r\n            })\r\n          }\r\n        })\r\n    })\r\n  }\r\n\r\n  onParse(e) {\r\n    // this.list = e.target.value;\r\n    this.setState({ csv: e.target.value })\r\n    // if(this.state.format === 'json') {\r\n    //   this.onJsonChange(e.target.value)\r\n    // }\r\n    if (this.state.format === 'csv') {\r\n      this.onCsvChange(e.target.value)\r\n    }\r\n    return\r\n  }\r\n\r\n  onNext = async (wizard) => {\r\n    // console.log(wizard.step)\r\n    if (\"home\" !== wizard.step.id) {\r\n      return\r\n    }\r\n\r\n    try {\r\n      if (!this.parseCompleted) {\r\n        await this.onCsvChange(this.state.csv)\r\n      }\r\n      await this.tokenStore.parseAddresses()\r\n      console.log('length of addresses', this.tokenStore.jsonAddresses.length)\r\n      if (this.tokenStore.jsonAddresses.length === 0) {\r\n        swal({\r\n          title: \"The address list is empty.\",\r\n          text: \"Please make sure you set correct CSV or JSON format in input selector\",\r\n          icon: \"error\",\r\n        })\r\n        return\r\n      }\r\n      if (this.tokenStore.invalid_addresses.length > 0) {\r\n        swal({\r\n          title: \"There are invalid eth addresses. If you click Next, it will remove them from the list.\",\r\n          text: JSON.stringify(this.tokenStore.invalid_addresses.slice(), null, '\\n'),\r\n          icon: \"error\",\r\n        })\r\n        return\r\n      }\r\n      wizard.push(\"inspect\")\r\n    } catch (e) {\r\n      console.error(e)\r\n      swal({\r\n        title: \"Parsing Error\",\r\n        text: e.message,\r\n        icon: \"error\",\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.tokenStore.errors.length > 0) {\r\n      swal(\"Error!\", this.tokenStore.errors.toString(), 'error')\r\n    }\r\n    if (this.web3Store.errors.length > 0) {\r\n      swal(\"Error!\", this.web3Store.errors.toString(), 'error')\r\n    }\r\n    return (\r\n      <div>\r\n        <div className=\"description\">\r\n          <ol>\r\n            <li>xuanzhe </li>\r\n            <li>Enter comma-separated list of addresses and values to send</li>\r\n            <li>Press the <strong>Next</strong> button</li>\r\n          </ol>\r\n        </div>\r\n        <Form className=\"form\">\r\n          <div className=\"form-inline\">\r\n            <div className=\"form-inline-i form-inline-i_token-address\">\r\n              <label htmlFor=\"token-address\" className=\"multisend-label\">Token Address</label>\r\n              <Select.Creatable\r\n                isLoading={this.web3Store.loading}\r\n                name=\"token-address\"\r\n                id=\"token-address\"\r\n                value={this.state.tokenAddress}\r\n                onChange={this.onTokenAddress}\r\n                loadingPlaceholder=\"Loading your token addresses...\"\r\n                placeholder=\"Please select a token or input the address\"\r\n                options={this.web3Store.userTokens.slice()}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-inline\">\r\n            <div className=\"form-inline-i form-inline-i_token-address-values\">\r\n              <label htmlFor=\"token-address-values\" className=\"multisend-label\">List of addresses and values</label>\r\n              <Textarea\r\n                disabled={this.web3Store.loading}\r\n                name=\"token-address-values\"\r\n                id=\"token-address-values\"\r\n                data-gram\r\n                validations={[required]}\r\n                placeholder={`Example: ${this.state.placeholder}`}\r\n                value={this.state.csv}\r\n                onBlur={this.onParse} id=\"addresses-with-balances\" className=\"multisend-textarea\"></Textarea>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class SecondStep extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"multisend-container multisend-container_bg\">\r\n        <div className=\"content\">\r\n          <h1 className=\"title\"><strong>Welcome to YARD</strong> AirDrop Tool</h1>\r\n          <p className=\"description\">\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\r\n            tempor incididunt ut labore <a href=\"#\">et dolore magna</a> aliqua.\r\n          </p>\r\n          <form className=\"form\">\r\n            <div className=\"form-inline\">\r\n              <div className=\"form-inline-i form-inline-i_token-address\">\r\n                <label htmlFor=\"token-address\" className=\"multisend-label\">Token Address</label>\r\n                <input type=\"text\" className=\"input\" id=\"token-address\" />\r\n              </div>\r\n              <div className=\"form-inline-i form-inline-i_token-decimals\">\r\n                <label htmlFor=\"token-decimals\" className=\"multisend-label\">Token Decimals</label>\r\n                <input type=\"text\" className=\"input\" id=\"token-decimals\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-inline\">\r\n              <div className=\"form-inline-i form-inline-i_balance\">\r\n                <label htmlFor=\"balance\" className=\"multisend-label\">Balance</label>\r\n                <input type=\"text\" className=\"input\" id=\"balance\" />\r\n              </div>\r\n              <div className=\"form-inline-i form-inline-i_balance\">\r\n                <label htmlFor=\"address-balance\" className=\"multisend-label\">Address with Balance</label>\r\n                <input type=\"text\" className=\"input\" id=\"address-balance\" />\r\n              </div>\r\n              <button type=\"button\" className=\"button button_add\"></button>\r\n            </div>\r\n            <div className=\"table\">\r\n              <div className=\"table-tr\">\r\n                <p className=\"table-td\">0.5 ETH</p>\r\n                <p className=\"table-td table-td_hash\">0xf3a71cc1be5ce833c471e3f25aa391f9cd56e1aa</p>\r\n                <div className=\"table-td\">\r\n                  <a href=\"#\" className=\"table-remove\"></a>\r\n                </div>\r\n              </div>\r\n              <div className=\"table-tr\">\r\n                <p className=\"table-td\">2.001 ETH</p>\r\n                <p className=\"table-td table-td_hash\">0x67de6a531b58327d075535e89524be5c5672f16b</p>\r\n                <div className=\"table-td\">\r\n                  <a href=\"#\" className=\"table-remove\"></a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Link className=\"button button_next\" to='/3'>Check Information</Link>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { inject, observer } from \"mobx-react\";\r\nimport BN from 'bignumber.js'\r\nimport Web3Utils from 'web3-utils'\r\nimport swal from 'sweetalert';\r\nimport Select from 'react-select';\r\nimport Form from 'react-validation/build/form';\r\n\r\nimport DataTable, { createTheme } from 'react-data-table-component'\r\n\r\ncreateTheme('solarized', {\r\n  text: {\r\n    primary: '#fff',\r\n    secondary: 'rgb(156, 216, 255)',\r\n    fontFamily: \"monospace\",\r\n  },\r\n  background: {\r\n    default: 'rgba(255,255,255,0)',\r\n  },\r\n  context: {\r\n    background: 'rgba(255,255,255,1)',\r\n    text: '#FFFFFF',\r\n  },\r\n  divider: {\r\n    default: '#073642',\r\n  },\r\n  button: {\r\n    default: 'rgba(156, 216, 255, 1)',\r\n    focus: 'rgba(156, 216, 255,.8)',\r\n    hover: 'rgba(156, 216, 255,.8)',\r\n    disabled: 'rgba(156, 216, 255, .5)',\r\n  },\r\n  sortFocus: {\r\n    default: 'rgba(156, 216, 255, .54)',\r\n  },\r\n});\r\n\r\nconst RecipientsDataTable = (props) => {\r\n  const columns = [\r\n    {\r\n      name: 'Address',\r\n      selector: 'address',\r\n      sortable: true,\r\n      grow: 3.8,\r\n    },\r\n    {\r\n      name: 'Amount, ' + props.tokenSymbol,\r\n      selector: 'balance',\r\n      sortable: true,\r\n      left: true,\r\n    },\r\n  ]\r\n\r\n  const customStyles = {\r\n    pagination: {\r\n      style: {\r\n        marginBottom: '20px',\r\n      },\r\n    },\r\n    cells: {\r\n      style: {\r\n        fontFamily: \"monospace\",\r\n      },\r\n    },\r\n  }\r\n\r\n  return (\r\n    <DataTable\r\n      title=\"List of recipients\"\r\n      columns={columns}\r\n      theme=\"solarized\"\r\n      customStyles={customStyles}\r\n      pagination\r\n      paginationPerPage={10}\r\n      data={props.data}\r\n      paginationTotalRows={props.data.length}\r\n    />\r\n  )\r\n}\r\n\r\n@inject(\"UiStore\")\r\n@observer\r\nexport class ThirdStep extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.tokenStore = props.UiStore.tokenStore;\r\n    this.txStore = props.UiStore.txStore;\r\n    this.gasPriceStore = props.UiStore.gasPriceStore;\r\n    console.log(this.gasPriceStore.gasPricesArray)\r\n    this.state = {\r\n      gasPrice: '',\r\n      transferGas: 0,\r\n      approveGas: 0,\r\n      multisendGas: 0,\r\n    }\r\n    this.gasSharesArray = [\r\n      { label: '10%', value: '10' },\r\n      { label: '20%', value: '20' },\r\n      { label: '50%', value: '50' },\r\n      { label: '70%', value: '70' },\r\n      { label: '100%', value: '100' },\r\n    ]\r\n\r\n    this.props.addNextHandler(this.onNext)\r\n  }\r\n  componentDidMount() {\r\n    if (this.tokenStore.dublicates.length > 0) {\r\n\r\n      swal({\r\n        title: `There were duplicated eth addresses in your list.`,\r\n        text: `${JSON.stringify(this.tokenStore.dublicates.slice(), null, '\\n')}.\\n Multisender already combined the balances for those addreses. Please make sure it did the calculation correctly.`,\r\n        icon: \"warning\",\r\n      })\r\n    }\r\n    (async () => {\r\n      try {\r\n        const transferGas = await this.txStore.getTransferGas({ slice: this.tokenStore.totalNumberTx, addPerTx: this.tokenStore.arrayLimit })\r\n        this.setState({ transferGas })\r\n        if (\"0x000000000000000000000000000000000000bEEF\" === this.tokenStore.tokenAddress) {\r\n          // Ether\r\n          const multisendGasOrig = await this.txStore.getMultisendGas({ slice: this.tokenStore.totalNumberTx, addPerTx: this.tokenStore.arrayLimit })\r\n          // Gas Limit: 84,279\r\n          // Gas Used by Transaction: 82,164 (97.49%)\r\n          const multisendGas = Math.floor(parseInt(multisendGasOrig) * 0.975)\r\n          this.setState({ multisendGas })\r\n          this.updateCurrentFee()\r\n        } else {\r\n          if (parseFloat(this.tokenStore.allowance) >= (parseFloat(this.tokenStore.totalBalance))) {\r\n            const multisendGasOrig = await this.txStore.getMultisendGas({ slice: this.tokenStore.totalNumberTx, addPerTx: this.tokenStore.arrayLimit })\r\n            // Gas Limit: 116,153\r\n            // Gas Used by Transaction: 81,933 (70.54%) for ERC20\r\n            // Gas Limit: 170,018\r\n            // Gas Used by Transaction: 135,628 (79.77%) for ERC777 // TODO: detect token type\r\n            const multisendGas = Math.floor(parseInt(multisendGasOrig) * 0.71)\r\n            const approveGas = await this.txStore.getApproveTxGas()\r\n            this.setState({ multisendGas, approveGas })\r\n            this.updateCurrentFee()\r\n          } else {\r\n            const approveGasOrig = await this.txStore.getApproveGas()\r\n            // Gas Limit: 66,181\r\n            // Gas Used by Transaction: 44,121 (66.67%)\r\n            const approveGas = Math.floor(parseInt(approveGasOrig) * 0.6667)\r\n            this.setState({ approveGas })\r\n          }\r\n        }\r\n      } catch (ex) {\r\n        console.log(\"3:\", ex)\r\n      }\r\n    })()\r\n  }\r\n\r\n  updateCurrentFee() {\r\n    const id = setTimeout(() => {\r\n      clearTimeout(id)\r\n      this._updateCurrentFeeImpl()\r\n    }, 0)\r\n  }\r\n\r\n  _updateCurrentFeeImpl() {\r\n    const { multisendGas, approveGas, transferGas } = this.state\r\n    const gasPrice = this.gasPriceStore.standardInHex\r\n    const approvePlusMultisendGas = (new BN(multisendGas)).plus(new BN(approveGas))\r\n    if (approvePlusMultisendGas.gt(new BN(transferGas))) {\r\n      // no savings\r\n      this.tokenStore.setCurrentFee('0')\r\n      return\r\n    }\r\n    const savedGas = (new BN(transferGas)).minus(approvePlusMultisendGas)\r\n    const savedGasEthValue = new BN(gasPrice).times(savedGas)\r\n    const savedGasPerTxEthValue = savedGasEthValue.div(this.tokenStore.totalNumberTx)\r\n    const newCurrentFee = savedGasPerTxEthValue.times(new BN(parseInt(this.gasPriceStore.selectedGasShare))).div(100)\r\n    const newCurrentFeeRounded = newCurrentFee.dp(0, 1)\r\n    this.tokenStore.setCurrentFee(newCurrentFeeRounded.toString(10))\r\n  }\r\n\r\n  onNext = async (wizard) => {\r\n    // console.log(wizard.step)\r\n    if (\"inspect\" !== wizard.step.id) {\r\n      return\r\n    }\r\n\r\n    try {\r\n      if (new BN(this.tokenStore.totalBalance).gt(new BN(this.tokenStore.defAccTokenBalance))) {\r\n        console.error('Your balance is less than total to send')\r\n        swal({\r\n          title: \"Insufficient token balance\",\r\n          text: `You don't have enough tokens to send to all addresses.\\nAmount needed: ${this.tokenStore.totalBalance} ${this.tokenStore.tokenSymbol}`,\r\n          icon: \"error\",\r\n        })\r\n        return\r\n      }\r\n      const multisendGasEthValue = this.getMultisendPlusApproveGasEthValue()\r\n      const ethBalanceWei = Web3Utils.toWei(this.tokenStore.ethBalance, 'ether');\r\n      if (multisendGasEthValue.gt(new BN(ethBalanceWei))) {\r\n        const displayMultisendGasEthValue = parseFloat(Web3Utils.fromWei(multisendGasEthValue.toString())).toFixed(5)\r\n        console.error('please fund you account in ')\r\n        swal({\r\n          title: \"Insufficient ETH balance\",\r\n          text: `You don't have enough ETH to send to all addresses. Amount needed: ${displayMultisendGasEthValue} ETH`,\r\n          icon: \"error\",\r\n        })\r\n        return\r\n      }\r\n      if (\"0x000000000000000000000000000000000000bEEF\" === this.tokenStore.tokenAddress) {\r\n        // Ether\r\n        wizard.push(\"multisend\")\r\n      } else {\r\n        if (new BN(this.tokenStore.allowance).gte(new BN(this.tokenStore.totalBalance))) {\r\n          wizard.push(\"multisend\")\r\n        } else {\r\n          wizard.push(\"approve\")\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n      swal({\r\n        title: \"Parsing Error\",\r\n        text: e.message,\r\n        icon: \"error\",\r\n      })\r\n    }\r\n  }\r\n\r\n  onGasPriceChange = (selected) => {\r\n    if (selected) {\r\n      this.gasPriceStore.setSelectedGasPrice(selected.value)\r\n      this.updateCurrentFee()\r\n    }\r\n  }\r\n\r\n  onGasShareChange = (selected) => {\r\n    if (selected) {\r\n      this.gasPriceStore.setSelectedGasShare(selected.value)\r\n      this.updateCurrentFee()\r\n    }\r\n  }\r\n\r\n  renderTokenBalance() {\r\n    if (\"0x000000000000000000000000000000000000bEEF\" === this.tokenStore.tokenAddress) {\r\n      return null\r\n    }\r\n    const value = parseFloat(this.tokenStore.defAccTokenBalance)\r\n    let displayValue = value.toFixed(5)\r\n    if (\"0.00000\" === displayValue) {\r\n      displayValue = value\r\n    }\r\n    return (\r\n      <div className=\"send-info-i\">\r\n        <p>Balance, {this.tokenStore.tokenSymbol}</p>\r\n        <p className=\"send-info-amount\">{displayValue}</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderTokenAllowance() {\r\n    if (\"0x000000000000000000000000000000000000bEEF\" === this.tokenStore.tokenAddress) {\r\n      return null\r\n    }\r\n    return (\r\n      <div className=\"send-info-i\">\r\n        <p>Allowance, {this.tokenStore.tokenSymbol}</p>\r\n        <p className=\"send-info-amount\">{this.tokenStore.allowance}</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderTransferGasInfo() {\r\n    const gasPrice = this.gasPriceStore.standardInHex\r\n    const transferEthValue = new BN(gasPrice).times(new BN(this.state.transferGas))\r\n    const displayTransferEthValue = parseFloat(Web3Utils.fromWei(transferEthValue.toString())).toFixed(5)\r\n    if (\"0x000000000000000000000000000000000000bEEF\" === this.tokenStore.tokenAddress) {\r\n      // Ether\r\n      return (\r\n        <div className=\"send-info-i\">\r\n          <p>Gas spent without Multisend, ETH</p>\r\n          <p className=\"send-info-amount\">{displayTransferEthValue}</p>\r\n        </div>\r\n      )\r\n    } else {\r\n      if (new BN(this.tokenStore.allowance).gte(new BN(this.tokenStore.totalBalance))) {\r\n        return (\r\n          <div className=\"send-info-i\">\r\n            <p>Gas spent without Multisend, ETH</p>\r\n            <p className=\"send-info-amount\">{displayTransferEthValue}</p>\r\n          </div>\r\n        )\r\n      } else {\r\n        return (\r\n          <div className=\"send-info-i\">\r\n            <p>Gas spent without Multisend, ETH</p>\r\n            <p className=\"send-info-amount\">{displayTransferEthValue}</p>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  getMultisendPlusApproveGasEthValue() {\r\n    const gasPrice = this.gasPriceStore.standardInHex\r\n    const approvePlusMultisendGas = (new BN(this.state.multisendGas)).plus(new BN(this.state.approveGas))\r\n    const multisendGasEthValue = new BN(gasPrice).times(approvePlusMultisendGas)\r\n    return multisendGasEthValue\r\n  }\r\n\r\n  renderMultisendGasInfo() {\r\n    const gasPrice = this.gasPriceStore.standardInHex\r\n    const approvePlusMultisendGas = (new BN(this.state.multisendGas)).plus(new BN(this.state.approveGas))\r\n    const multisendGasEthValue = new BN(gasPrice).times(approvePlusMultisendGas)\r\n    const displayMultisendGasEthValue = parseFloat(Web3Utils.fromWei(multisendGasEthValue.toString())).toFixed(5)\r\n    if (\"0x000000000000000000000000000000000000bEEF\" === this.tokenStore.tokenAddress) {\r\n      // Ether\r\n      return (\r\n        <div className=\"send-info-i\">\r\n          <p>Gas spent with Multisend, ETH</p>\r\n          <p className=\"send-info-amount\">{displayMultisendGasEthValue}</p>\r\n        </div>\r\n      )\r\n    } else {\r\n      if (new BN(this.tokenStore.allowance).gte(new BN(this.tokenStore.totalBalance))) {\r\n        return (\r\n          <div className=\"send-info-i\">\r\n            <p>Gas spent with Multisend, ETH</p>\r\n            <p className=\"send-info-amount\">{displayMultisendGasEthValue}</p>\r\n          </div>\r\n        )\r\n      } else {\r\n        return (\r\n          <div className=\"send-info-i\">\r\n            <p>Gas spent with Multisend, ETH</p>\r\n            <p className=\"send-info-amount\">N/A</p>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  renderSavingsGasInfo() {\r\n    const { multisendGas, approveGas, transferGas } = this.state\r\n    const gasPrice = this.gasPriceStore.standardInHex\r\n    const transferEthValue = new BN(gasPrice).times(new BN(this.state.transferGas))\r\n    const displayTransferEthValue = Web3Utils.fromWei(transferEthValue.toString())\r\n    // const approveGasEthValue = new BN(gasPrice).times(new BN(this.state.approveGas))\r\n    // const displayApproveGasEthValue = Web3Utils.fromWei(approveGasEthValue.toString())\r\n    const approvePlusMultisendGas = (new BN(multisendGas)).plus(new BN(approveGas))\r\n    const multisendGasEthValue = new BN(gasPrice).times(approvePlusMultisendGas)\r\n    const displayMultisendGasEthValue = Web3Utils.fromWei(multisendGasEthValue.toString())\r\n    const savedGas = (new BN(transferGas)).minus(approvePlusMultisendGas)\r\n    const savedGasEthValue = new BN(gasPrice).times(savedGas)\r\n    const displaySavedGasEthValue = parseFloat(Web3Utils.fromWei(savedGasEthValue.toString())).toFixed(5)\r\n    let sign = \"\"\r\n    // if (approvePlusMultisendGas.gt(new BN(transferGas))) {\r\n    //   sign = \"-\"\r\n    // }\r\n    if (\"0x000000000000000000000000000000000000bEEF\" === this.tokenStore.tokenAddress) {\r\n      // Ether\r\n      return (\r\n        <div className=\"send-info-i\">\r\n          <p>Your gas savings, ETH</p>\r\n          <p className=\"send-info-amount\">{sign}{displaySavedGasEthValue}</p>\r\n        </div>\r\n      )\r\n    } else {\r\n      if (new BN(this.tokenStore.allowance).gte(new BN(this.tokenStore.totalBalance))) {\r\n        return (\r\n          <div className=\"send-info-i\">\r\n            <p>Your gas savings, ETH</p>\r\n            <p className=\"send-info-amount\">{sign}{displaySavedGasEthValue}</p>\r\n          </div>\r\n        )\r\n      } else {\r\n        return (\r\n          <div className=\"send-info-i\">\r\n            <p>Your gas savings, ETH</p>\r\n            <p className=\"send-info-amount\">N/A</p>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <div className=\"description\">\r\n            <ol>\r\n              <li>Verify addresses and values</li>\r\n              <li>Press the <strong>Next</strong> button</li>\r\n            </ol>\r\n            <p style={{ display: \"none\" }}>\r\n              <strong>Gas Sharing</strong> is a portion of gas saved by this service that you are OK to tip\r\n            </p>\r\n          </div>\r\n          <Form className=\"form\">\r\n            <div className=\"form-inline\" style={{ display: \"none\" }}>\r\n              <div className=\"form-inline-i form-inline-i_gas-price\">\r\n                <label htmlFor=\"gas-price\" className=\"multisend-label\">Network Speed (Gas Price)</label>\r\n                <Select.Creatable\r\n                  isLoading={this.gasPriceStore.loading}\r\n                  name=\"gas-price\"\r\n                  id=\"gas-price\"\r\n                  value={this.gasPriceStore.selectedGasPrice}\r\n                  onChange={this.onGasPriceChange}\r\n                  loadingPlaceholder=\"Fetching gas Price data ...\"\r\n                  placeholder=\"Please select desired network speed\"\r\n                  options={this.gasPriceStore.gasPricesArray.slice()}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-inline\" style={{ display: \"none\" }}>\r\n              <div className=\"form-inline-i form-inline-i_gas-sharing\">\r\n                <label htmlFor=\"gas-sharing\" className=\"multisend-label\">Saved Gas Sharing</label>\r\n                <Select.Creatable\r\n                  isLoading={false}\r\n                  name=\"gas-sharing\"\r\n                  id=\"gas-sharing\"\r\n                  value={this.gasPriceStore.selectedGasShare}\r\n                  onChange={this.onGasShareChange}\r\n                  loadingPlaceholder=\"\"\r\n                  placeholder=\"Please select desired gas sharing\"\r\n                  options={this.gasSharesArray.slice()}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Form>\r\n          <div className=\"send-info\" style={{ padding: \"15px 0px\" }}>\r\n            <div className=\"send-info-side\">\r\n              <div className=\"send-info-i\">\r\n                <p>Total to be Sent, {this.tokenStore.tokenSymbol}</p>\r\n                <p className=\"send-info-amount\">{this.tokenStore.totalBalance}</p>\r\n              </div>\r\n              {\r\n                this.renderTokenBalance()\r\n              }\r\n              {/* {this.renderTransferGasInfo()} */}\r\n              <div className=\"send-info-i\">\r\n                <p>Total Number of tx Needed</p>\r\n                <p className=\"send-info-amount\">{this.tokenStore.totalNumberTx}</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"send-info-side\">\r\n              {\r\n                this.renderTokenAllowance()\r\n              }\r\n              <div className=\"send-info-i\">\r\n                <p>Balance, ETH</p>\r\n                <p className=\"send-info-amount\">{this.tokenStore.ethBalance}</p>\r\n              </div>\r\n              {/* {this.renderMultisendGasInfo()} */}\r\n              {/* {this.renderSavingsGasInfo()} */}\r\n            </div>\r\n          </div>\r\n          <RecipientsDataTable data={this.tokenStore.addressesData} tokenSymbol={this.tokenStore.tokenSymbol} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { inject, observer } from \"mobx-react\";\r\n\r\n@inject(\"UiStore\")\r\n@observer\r\nexport class Transaction extends React.Component {\r\n  render () {\r\n    const { tx, explorerUrl } = this.props\r\n    const { name, hash, status } = tx;\r\n    let classname;\r\n    switch(status){\r\n      case 'mined':\r\n        classname = 'table-td_check-hash_done'\r\n        break;\r\n      case 'error':\r\n        classname = 'table-td_check-hash_error'\r\n        break;\r\n      case 'pending':\r\n        classname = 'table-td_check-hash_wait'\r\n        break;\r\n      default:\r\n        classname = 'table-td_check-hash_wait'\r\n    }\r\n    // const classname = status === 'mined' ? 'table-td_check-hash_done' : 'table-td_check-hash_wait'\r\n    return (\r\n      <div className=\"table-tr\">\r\n        <div className={`table-td table-td_check-hash ${classname}`}>\r\n          TxHash: <a target=\"_blank\" href={`${explorerUrl}/tx/${hash}`}>{hash}</a> <br/> {name} <br/> Status: {status}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { Transaction } from \"./Transaction\"\r\n\r\n@inject(\"UiStore\")\r\n@observer\r\nexport class ApproveStep extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.props = props\r\n    this.txStore = props.UiStore.txStore;\r\n    this.explorerUrl = props.UiStore.web3Store.explorerUrl;\r\n    this.intervalId = null\r\n    this.state = {\r\n      txs: this.txStore.txs,\r\n    }\r\n\r\n    this.props.addNextHandler(this.onNext)\r\n  }\r\n  componentDidMount(){\r\n    (async () => {\r\n      try {\r\n        await this.txStore.doApprove()\r\n        this.setState({txs: this.txStore.txs})\r\n      } catch(e){\r\n        console.log('doApprove error:', e)\r\n      }\r\n    })()\r\n    if (null === this.intervalId) {\r\n      this.intervalId = setInterval(() => {\r\n        this.setState({txs: this.txStore.txs})\r\n      }, 1000)\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (null !== this.intervalId) {\r\n      clearInterval(this.intervalId)\r\n      this.intervalId = null\r\n    }\r\n  }\r\n\r\n  onNext = async (wizard) => {\r\n    // console.log(wizard.step)\r\n    if (\"approve\" !== wizard.step.id) {\r\n      return\r\n    }\r\n\r\n    wizard.push(\"inspect\")\r\n  }\r\n\r\n  render () {\r\n    const { txs } = this.state\r\n    const txHashes = txs.map((tx, index) => {\r\n      return <Transaction key={index} tx={{...tx}} explorerUrl={this.explorerUrl}/>\r\n    })\r\n    const mined = txs.reduce((mined, tx) => {\r\n      const { status } = tx\r\n      return mined && status === \"mined\"\r\n    }, true)\r\n    let status;\r\n    if(txs.length > 0){\r\n      if (mined) {\r\n        status =  \"Approve transaction is mined. Press the Next button to continue\"\r\n      } else {\r\n        status = \"Approve transaction was sent out. Now wait until it is mined\"\r\n      }\r\n    } else {\r\n      status = `Waiting for you to sign an Approve transaction in Metamask`\r\n    }\r\n    return (\r\n      <div>\r\n        <div>\r\n          <div className=\"description\">\r\n            <div>\r\n              Sign an Approve transaction in MetaMask<br />to send tokens to many recipients from the Multisend smart contract\r\n            </div>\r\n            <p>&nbsp;</p>\r\n            <ol>\r\n              <li>Confirm Approve transaction in MetaMask</li>\r\n              <li>Wait for the transaction to be mined</li>\r\n              <li>Press the <strong>Next</strong> button</li>\r\n            </ol>\r\n          </div>\r\n          <form className=\"form\">\r\n            <p>{status}</p>\r\n            <div className=\"table\">\r\n              {txHashes}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { Transaction } from \"./Transaction\"\r\n\r\n@inject(\"UiStore\")\r\n@observer\r\nexport class FourthStep extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.txStore = props.UiStore.txStore;\r\n    this.tokenStore = props.UiStore.tokenStore;\r\n    this.explorerUrl = props.UiStore.web3Store.explorerUrl;\r\n    this.intervalId = null\r\n    this.state = {\r\n      txs: this.txStore.txs,\r\n      totalNumberOftx: this.calcTotalNumberOftx(),\r\n    }\r\n    this.doSendExecuted = false\r\n\r\n    this.props.addNextHandler(this.onNext)\r\n  }\r\n\r\n  onNext = async (wizard) => {\r\n    // console.log(wizard.step)\r\n    if (\"multisend\" !== wizard.step.id) {\r\n      return\r\n    }\r\n\r\n    // reload page to make sure that all caches are cleared\r\n    location.reload()\r\n  }\r\n\r\n  componentDidMount(){\r\n    (async () => {\r\n      try {\r\n        if (!this.doSendExecuted) {\r\n          this.doSendExecuted = true\r\n          await this.txStore.doSend()\r\n          this.setState({\r\n            txs: this.txStore.txs,\r\n            totalNumberOftx: this.calcTotalNumberOftx(),\r\n          })\r\n        }\r\n      } catch(e){\r\n        console.log('doApprove error:', e)\r\n      }\r\n    })()\r\n    if (null === this.intervalId) {\r\n      this.intervalId = setInterval(() => {\r\n        this.setState({\r\n          txs: this.txStore.txs,\r\n          totalNumberOftx: this.calcTotalNumberOftx(),\r\n        })\r\n      }, 1000)\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (null !== this.intervalId) {\r\n      clearInterval(this.intervalId)\r\n      this.intervalId = null\r\n    }\r\n  }\r\n\r\n  calcTotalNumberOftx() {\r\n    let totalNumberOftx;\r\n\r\n    // if(Number(this.tokenStore.totalBalance) > Number(this.tokenStore.allowance)){\r\n    //   totalNumberOftx = Number(this.tokenStore.totalNumberTx) + 1;\r\n    // } else {\r\n      totalNumberOftx = Number(this.tokenStore.totalNumberTx)\r\n    // }\r\n    return totalNumberOftx\r\n  }\r\n\r\n  render () {\r\n    const { txs, totalNumberOftx } = this.state\r\n    const txHashes = txs.map((tx, index) => {\r\n      return <Transaction key={index} tx={{...tx}} explorerUrl={this.explorerUrl}/>\r\n    })\r\n    const mined = txs.reduce((mined, tx) => {\r\n      const { status } = tx\r\n      return mined && status === \"mined\"\r\n    }, true)\r\n    let status;\r\n    if(txs.length === totalNumberOftx){\r\n      if (mined) {\r\n        status =  \"All transactions are mined. Congratulations!\"\r\n      } else {\r\n        status =  \"Transactions were sent out. Now wait until all transactions are mined.\"\r\n      }\r\n    } else {\r\n      const txCount = totalNumberOftx - txs.length\r\n      status = `Waiting for you to sign transaction in Metamask`\r\n      if (totalNumberOftx > 1) {\r\n        status = `Waiting for you to sign ${txCount} transactions in Metamask`\r\n      }\r\n    }\r\n    let label = \"Sign a multisend transaction in MetaMask\"\r\n    if (totalNumberOftx > 1) {\r\n      label = `Sign all ${totalNumberOftx} multisend transactions in MetaMask`\r\n    }\r\n    let label2 = \"to send tokens to many recipients from the Multisend smart contract\"\r\n    if (\"ETH\" === this.tokenStore.tokenSymbol) {\r\n      label2 = \"to send ETH to many recipients from the Multisend smart contract\"\r\n    }\r\n    return (\r\n      <div>\r\n        <div>\r\n          <div className=\"description\">\r\n            <div>\r\n              {label}<br />{label2}\r\n            </div>\r\n            <p>&nbsp;</p>\r\n            <ol>\r\n              <li>Confirm all multisend transactions in MetaMask</li>\r\n              <li>Wait for all transactions to be mined</li>\r\n              <li>Check transactions on etherscan</li>\r\n              <li>Press the <strong>Next</strong> button</li>\r\n            </ol>\r\n          </div>\r\n          <form className=\"form\">\r\n            <p>{status}</p>\r\n            <div className=\"table\">\r\n              {txHashes}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class FifthStep extends React.Component {\r\n  render () {\r\n    return (\r\n      <div className=\"multisend-container multisend-container_bg container_opacity\">\r\n        <div className=\"content\">\r\n          <div className=\"transactions-title\">\r\n            <h1 className=\"title\"><strong>Table Name</strong></h1>\r\n            <p className=\"title\">Total: <strong>3789.093 ETH</strong></p>\r\n          </div>\r\n          <div className=\"table\">\r\n            <div className=\"table-tr table-tr_title\">\r\n              <div className=\"table-td\">Token Name</div>\r\n              <div className=\"table-td\">Address</div>\r\n              <div className=\"table-td\">Amount</div>\r\n            </div>\r\n            <div className=\"table-tr\">\r\n              <div className=\"table-td\">\r\n                <p>Name 1</p>\r\n              </div>\r\n              <div className=\"table-td\">\r\n                <p className=\"break-all\">0xc6300135a8fcd43123bb486ff06831b5345d0971</p>\r\n              </div>\r\n              <div className=\"table-td\">\r\n                <p>2.5672 ETH</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"table-tr\">\r\n              <div className=\"table-td\">\r\n                <p>Name 2</p>\r\n              </div>\r\n              <div className=\"table-td\">\r\n                <p className=\"break-all\">0x0a7772cdbeee6dbdfdf944dd3e11d32d6a183bde</p>\r\n              </div>\r\n              <div className=\"table-td\">\r\n                <p>8.009 ETH</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Link className=\"button button_next\" to='/'>Back to Home</Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { inject, observer } from \"mobx-react\";\r\nimport swal from 'sweetalert';\r\nimport { Link } from 'react-router-dom';\r\nimport generateElement from '../generateElement'\r\n\r\n@inject(\"UiStore\")\r\n@observer\r\nexport class Retry extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.onTxInput = this.onTxInput.bind(this)\r\n    this.txStore = props.UiStore.txStore;\r\n    \r\n    this.state = {\r\n      txHash: ''\r\n    }\r\n  }\r\n  \r\n  onTxInput(e){\r\n    const txHash = e.target.value;\r\n    setTimeout(async () => {\r\n      if(txHash.length === 66){\r\n        // https://kovan.etherscan.io/tx/0x234cb7950c9239ce64033647e14b8fdd915106cad24c8ae57b0eb9052e8ec79a\r\n        const txdata = await this.txStore.getTxReceipt(txHash);\r\n        console.log(txdata)\r\n        this.setState({txHash})\r\n      } else {\r\n        swal({\r\n          content: generateElement(`Tx Hash is not valid`),\r\n          icon: \"error\",\r\n        })\r\n      }\r\n\r\n    }, 750)\r\n  }\r\n  render () {\r\n    return (\r\n      <div className=\"multisend-container multisend-container_bg container_opacity\">\r\n        <div className=\"content\">\r\n          <div className=\"table\">\r\n            <label htmlFor=\"txhash\" className=\"multisend-label\">Transaction Hash</label>\r\n            <input onChange={this.onTxInput} type=\"text\" className=\"input\" id=\"txhash\"/>\r\n            <div className=\"table-tr table-tr_title\">\r\n              <div className=\"table-td\">Token Name</div>\r\n              <div className=\"table-td\">Address</div>\r\n              <div className=\"table-td\">Amount</div>\r\n            </div>\r\n            <div className=\"table-tr\">\r\n              <div className=\"table-td\">\r\n                <p>Name 1</p>\r\n              </div>\r\n              <div className=\"table-td\">\r\n                <p className=\"break-all\">0xc6300135a8fcd43123bb486ff06831b5345d0971</p>\r\n              </div>\r\n              <div className=\"table-td\">\r\n                <p>2.5672 ETH</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"table-tr\">\r\n              <div className=\"table-td\">\r\n                <p>Name 2</p>\r\n              </div>\r\n              <div className=\"table-td\">\r\n                <p className=\"break-all\">0x0a7772cdbeee6dbdfdf944dd3e11d32d6a183bde</p>\r\n              </div>\r\n              <div className=\"table-td\">\r\n                <p>8.009 ETH</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Link className=\"button button_next\" to='/'>Back to Home</Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class Welcome extends React.Component {\r\n  render () {\r\n    return (\r\n      <div className=\"multisend-container multisend-container_bg\">\r\n        <div className=\"content\">\r\n          <h1 className=\"title\"><strong>Welcome to Token</strong> MultiSender</h1>\r\n          <p className=\"description\">\r\n            Desc youtube video how to use multisender\r\n          </p>\r\n          <p>\r\n            Already have JSON or CSV prepared?\r\n          </p>\r\n          <Link className=\"button button_next\" to='/1'>Proceed for JSON/CSV</Link>\r\n\r\n          <p>\r\n            Transaction Wizard. Build a list of addresses and balances using UI.\r\n          </p>\r\n          <Link className=\"button button_next\" to='/1'>Proceed for Transaction Wizard</Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { WithWizard } from 'react-albus';\r\n\r\nconst Navigation = () => (\r\n  <WithWizard\r\n    render={({ next, previous, step, steps, push }) => (\r\n      <div className=\"multisend-buttons\">\r\n        {(\"home\" !== step.id && \"multisend\" !== step.id) && (\r\n          <button className=\"multisend-button multisend-button_prev\" onClick={previous}>\r\n            Back\r\n          </button>\r\n        )}\r\n\r\n        {\"multisend\" === step.id && (\r\n          <button className=\"multisend-button multisend-button_prev\" onClick={next}>\r\n            Home\r\n          </button>\r\n        )}\r\n\r\n        {\"multisend\" !== step.id && (\r\n          <button className=\"multisend-button multisend-button_next\" onClick={next}>\r\n            Next\r\n          </button>\r\n        )}\r\n      </div>\r\n    )}\r\n  />\r\n);\r\n\r\nexport default Navigation;\r\n","import React, { Component } from 'react';\r\nimport { Header, FirstStep, SecondStep, ThirdStep, ApproveStep, FourthStep, FifthStep, Retry, Welcome } from './components';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport { inject } from \"mobx-react\";\r\nimport './assets/stylesheets/application.css';\r\nimport Navigation from './components/Navigation';\r\nimport { Wizard, Steps, Step } from 'react-albus';\r\nimport { Line } from 'rc-progress';\r\nimport { PulseLoader } from 'react-spinners';\r\n\r\n\r\n// const RoutedWizard = ({ children }) =>\r\n//   <Route\r\n//     render={({ history, match: { url } }) =>\r\n//       <Wizard history={history} basename={url}>\r\n//         {children}\r\n//       </Wizard>}\r\n//   />;\r\n\r\n// const PrivateRoute = ({ component: Component, startedUrl, ...rest }) => (\r\n//   <Route\r\n//     {...rest}\r\n//     render={props =>\r\n//       startedUrl === '#/' || startedUrl === '#/1' ? (\r\n//         <Component {...props} />\r\n//       ) : (\r\n//         <Redirect\r\n//           to={{\r\n//             pathname: \"/\"\r\n//           }}\r\n//         />\r\n//       )\r\n//     }\r\n//   />\r\n// );\r\n\r\n@inject(\"UiStore\")\r\nexport class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.tokenStore = props.UiStore.tokenStore;\r\n    this.web3Store = props.UiStore.web3Store;\r\n    this.nextHandlers = []\r\n    this.state = {\r\n      loading: this.web3Store.loading,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    (async () => {\r\n      try {\r\n        await this.tokenStore.proxyMultiSenderAddress()\r\n        this.setState((state, props) => {\r\n          return { loading: this.web3Store.loading }\r\n        })\r\n      } catch (ex) {\r\n        console.log(\"App:\", ex)\r\n      }\r\n    })()\r\n  }\r\n\r\n  onNext = (wizard) => {\r\n    (async () => {\r\n      try {\r\n        this.nextHandlers.forEach(async handler => {\r\n          await handler(wizard)\r\n        })\r\n      } catch (ex) {\r\n        console.log(\"onNext:\", ex)\r\n      }\r\n    })()\r\n  }\r\n\r\n  addNextHandler = (handler) => {\r\n    this.nextHandlers.push(handler)\r\n  }\r\n\r\n  render() {\r\n    const { startedUrl } = this.web3Store;\r\n    if (!(startedUrl === '#/' || startedUrl === '#/home')) {\r\n      this.web3Store.setStartedUrl('#/')\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/\"\r\n          }}\r\n        />\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <Route\r\n          render={({ history }) => (\r\n            <Wizard\r\n              history={history}\r\n              onNext={this.onNext}\r\n              render={({ step, steps }) => (\r\n                <div className=\"multisend-container multisend-container_bg\">\r\n                  <div className=\"content\">\r\n                    <h1 className=\"title\"><strong>Welcome to YARD</strong> AirDrop Tool</h1>\r\n                    <Line\r\n                      percent={(steps.indexOf(step) + 1) / steps.length * 100}\r\n                      className=\"pad-b\"\r\n                    />\r\n                    <div className='sweet-loading'>\r\n                      <PulseLoader\r\n                        color={'#123abc'}\r\n                        loading={this.state.loading}\r\n                      />\r\n                    </div>\r\n                    <TransitionGroup>\r\n                      <CSSTransition\r\n                        key={step.id}\r\n                        classNames=\"multisend\"\r\n                        timeout={{ enter: 500, exit: 500 }}\r\n                      >\r\n                        <Steps key={step.id} step={step}>\r\n                          <Step id=\"home\">\r\n                            <FirstStep addNextHandler={this.addNextHandler} />\r\n                          </Step>\r\n                          <Step id=\"inspect\">\r\n                            <ThirdStep addNextHandler={this.addNextHandler} />\r\n                          </Step>\r\n                          <Step id=\"approve\">\r\n                            <ApproveStep addNextHandler={this.addNextHandler} />\r\n                          </Step>\r\n                          <Step id=\"multisend\">\r\n                            <FourthStep addNextHandler={this.addNextHandler} />\r\n                          </Step>\r\n                        </Steps>\r\n                      </CSSTransition>\r\n                    </TransitionGroup>\r\n                    <Navigation />\r\n                  </div>\r\n                </div>\r\n              )}\r\n            />\r\n          )}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import Web3 from 'web3'\r\n\r\nconst getAccounts = () => {\r\n  return new Promise(function (resolve, reject) {\r\n    (async () => {\r\n      try {\r\n        // Will open the MetaMask UI\r\n        // You should disable this button while the request is pending!\r\n        const { ethereum } = window;\r\n        const accounts = await ethereum.request({ method: 'eth_requestAccounts' });\r\n        resolve(accounts)\r\n      } catch (error) {\r\n        console.error(error);\r\n        reject(error)\r\n      }\r\n    })()\r\n  })\r\n}\r\n\r\nlet _web3Config = null\r\nlet _web3Promise = null\r\nlet getWeb3 = () => {\r\n  if (!_web3Promise) {\r\n    _web3Promise = new Promise(function (resolve, reject) {\r\n      if (null !== _web3Config) {\r\n        resolve(_web3Config)\r\n        return\r\n      }\r\n      // Wait for loading completion to avoid race conditions with ethereum injection timing.\r\n      window.addEventListener('load', function () {\r\n        // Checking if ethereum has been injected by the browser (Mist/MetaMask)\r\n        if (window.hasOwnProperty(\"ethereum\")) {\r\n          // Use Mist/MetaMask's provider.\r\n          let web3 = new Web3(Web3.givenProvider)\r\n          web3.eth.net.getId().then((netId) => {\r\n            let netIdName, trustApiName, explorerUrl;\r\n            console.log('netId', netId);\r\n            netId = \"\" + netId\r\n            switch (netId) {\r\n              case \"1\":\r\n                netIdName = 'Mainnet'\r\n                trustApiName = 'api'\r\n                explorerUrl = 'https://etherscan.io'\r\n                console.log('This is Foundation', netId)\r\n                break;\r\n              case \"3\":\r\n                netIdName = 'Ropsten'\r\n                trustApiName = 'ropsten'\r\n                explorerUrl = 'https://ropsten.etherscan.io'\r\n                console.log('This is Ropsten', netId)\r\n                break;\r\n              case \"4\":\r\n                netIdName = 'Rinkeby'\r\n                trustApiName = 'rinkeby'\r\n                explorerUrl = 'https://rinkeby.etherscan.io'\r\n                console.log('This is Rinkeby', netId)\r\n                break;\r\n              case \"42\":\r\n                netIdName = 'Kovan'\r\n                trustApiName = 'kovan'\r\n                explorerUrl = 'https://kovan.etherscan.io'\r\n                console.log('This is Kovan', netId)\r\n                break;\r\n              case \"56\":\r\n                netIdName = 'Bsc'\r\n                trustApiName = 'bsc'\r\n                explorerUrl = 'https://bscscan.com'\r\n                console.log('This is Bsc', netId)\r\n                break;\r\n              case \"97\":\r\n                netIdName = 'BscTest'\r\n                trustApiName = 'bsc'\r\n                explorerUrl = 'https://testnet.bscscan.com'\r\n                console.log('This is Bsc Test', netId)\r\n                break;\r\n              case \"99\":\r\n                netIdName = 'POA Core'\r\n                trustApiName = 'poa'\r\n                explorerUrl = 'https://poaexplorer.com'\r\n                console.log('This is Core', netId)\r\n                break;\r\n              case \"77\":\r\n                netIdName = 'POA Sokol'\r\n                trustApiName = 'https://trust-sokol.herokuapp.com'\r\n                explorerUrl = 'https://sokol.poaexplorer.com'\r\n                console.log('This is Sokol', netId)\r\n                break;\r\n              case \"137\":\r\n                netIdName = 'Matic'\r\n                trustApiName = 'api'\r\n                explorerUrl = 'https://polygonscan.com'\r\n                console.log('This is Matic', netId)\r\n                break;\r\n              case \"80001\":\r\n                netIdName = 'Mumbai'\r\n                trustApiName = 'mumbai'\r\n                explorerUrl = 'https://mumbai.polygonscan.com'\r\n                console.log('This is Mumbai', netId)\r\n                break;\r\n              default:\r\n                netIdName = 'Unknown'\r\n                console.log('This is an unknown network.', netId)\r\n            }\r\n            document.title = `${netIdName} - YardAirDrop dApp`\r\n            getAccounts().then(accounts => {\r\n              const firstAccount = accounts.length > 0 ? accounts[0] : null\r\n              var defaultAccount = web3.eth.defaultAccount || firstAccount || null;\r\n              if (defaultAccount === null) {\r\n                reject({ message: 'Please unlock your metamask and refresh the page' })\r\n                return\r\n              }\r\n              if (web3.eth.estimateGas.__proto__ && web3.eth.estimateGas.__proto__.call) {\r\n                console.log(\"typeof web3.eth.estimateGas.__proto__.call:\", typeof web3.eth.estimateGas.__proto__.call)\r\n                web3.eth.estimateGas.call = web3.eth.estimateGas.__proto__.call\r\n                console.log(\"typeof web3.eth.estimateGas.call:\", typeof web3.eth.estimateGas.call)\r\n              }\r\n              const results = {\r\n                web3Instance: web3,\r\n                netIdName,\r\n                netId,\r\n                injectedWeb3: true,\r\n                defaultAccount,\r\n                trustApiName,\r\n                explorerUrl\r\n              }\r\n              _web3Config = results\r\n              resolve(_web3Config)\r\n            }).catch(err => {\r\n              reject(err)\r\n            })\r\n          }).catch(err => {\r\n            reject(err)\r\n          })\r\n\r\n          console.log('Injected web3 detected.');\r\n\r\n        } else {\r\n          // Fallback to localhost if no web3 injection.\r\n          const errorMsg = `Metamask is not installed. Please go to\r\n          https://metamask.io and return to this page after you installed it`\r\n          console.log('No web3 instance injected, using Local web3.');\r\n          console.error('Metamask not found');\r\n          reject({ message: errorMsg })\r\n          return\r\n        }\r\n      })\r\n    })\r\n  }\r\n  return _web3Promise\r\n}\r\n\r\nexport default getWeb3\r\n","import { action, observable } from \"mobx\";\r\nimport getWeb3 from '../getWeb3';\r\nimport Web3 from 'web3';\r\n\r\nclass Web3Store {\r\n  @observable web3 = {};\r\n  @observable defaultAccount = '';\r\n  @observable loading = true;\r\n  @observable errors = [];\r\n  @observable userTokens = [];\r\n  @observable explorerUrl = '';\r\n  @observable startedUrl = window.location.hash\r\n  constructor(rootStore) {\r\n    this.userTokensInitialized = false\r\n  }\r\n  @action\r\n  setExplorerUrl(url) {\r\n    this.explorerUrl = url\r\n  }\r\n  @action\r\n  setStartedUrl(url) {\r\n    this.startedUrl = url;\r\n  }\r\n\r\n  async getWeb3Promise() {\r\n    return getWeb3().then(async (web3Config) => {\r\n      if ('' !== this.explorerUrl) {\r\n        return this\r\n      }\r\n      const { web3Instance, defaultAccount, netId, netIdName } = web3Config;\r\n      this.defaultAccount = defaultAccount;\r\n      // this.web3 = new Web3(web3Instance.currentProvider);\r\n      this.web3 = web3Instance;\r\n      this.netId = netId;\r\n      this.netIdName = netIdName;\r\n      await this.getUserTokens(web3Config)\r\n      this.setExplorerUrl(web3Config.explorerUrl)\r\n      console.log('web3 loaded')\r\n      return this\r\n    }).catch((e) => {\r\n      console.error(e, 'web3 not loaded')\r\n      this.errors.push(e.message)\r\n      throw e\r\n    })\r\n  }\r\n\r\n\r\n\r\n  async getMutiContractAdd(blockchain_network) {\r\n    console.log(\"blockchain_network:\",blockchain_network)\r\n    if (('mumbai' === blockchain_network) || ('matic' === blockchain_network)) {\r\n      return \"0x068F8339905E65DA559cB6066E0d9F94C3E3b979\"\r\n    }else if( 'bsc' == blockchain_network ){\r\n     return \"0x35A785C971D39166DADD916a94aA9c28e9D44923\"\r\n    }else if( 'bsctest' == blockchain_network ){\r\n      return \"0x931551F8540d1b85c3081FD8096C66B0b6E25522\"\r\n    } else {\r\n      return \"0x068F8339905E65DA559cB6066E0d9F94C3E3b979\"\r\n    }\r\n  }\r\n\r\n\r\n  async getUserTokens({ trustApiName, defaultAccount }) {\r\n    return new Promise((resolve, reject) => {\r\n      if (this.userTokensInitialized) {\r\n        resolve(this)\r\n        return\r\n      }\r\n\r\n\r\n      const blockchain_network = this.netIdName.toLowerCase()\r\n\r\n      console.log(\"blockchain_network:\",blockchain_network)\r\n\r\n      let api_suffix = '';\r\n      let api_domain = '';\r\n      let etherscanApiKey = '';\r\n      if (('mainnet' === blockchain_network) || ('matic' === blockchain_network) || ('bsc' === blockchain_network)) {\r\n        api_suffix = '';\r\n      }else if('bsctest' === blockchain_network){\r\n        api_suffix = \"-testnet\"\r\n      }else {\r\n        api_suffix = '-' + blockchain_network\r\n      }\r\n\r\n      if (('mumbai' === blockchain_network) || ('matic' === blockchain_network)) {\r\n        api_domain = \"polygonscan.com\";\r\n        etherscanApiKey = \"JC4VZGRZ3MCJFJ34DFA3K67K3ZD78ZTYUA\"\r\n      }else if( 'bsc' == blockchain_network ){\r\n        api_domain = \"bscscan.com\"\r\n        etherscanApiKey = \"SGZRB9A29C38QQFPC1HP3IKZH97VV4AZZG\"\r\n      }else if( 'bsctest' == blockchain_network ){\r\n        api_domain = \"bscscan.com\"\r\n        etherscanApiKey = \"SGZRB9A29C38QQFPC1HP3IKZH97VV4AZZG\"\r\n      } else {\r\n        api_domain = \"etherscan.io\";\r\n        etherscanApiKey = \"JC4VZGRZ3MCJFJ34DFA3K67K3ZD78ZTYUA\"\r\n      }\r\n      window.fetch(\r\n        `https://api${api_suffix}.${api_domain}/api?module=account&action=tokentx&address=${defaultAccount}&startblock=0&endblock=999999999&sort=desc&apikey=${etherscanApiKey}`\r\n      ).then((res) => {\r\n        return res.json()\r\n      }).then((res) => {\r\n        if (!(res.result && (typeof res.result === \"object\") && res.result.hasOwnProperty(\"length\"))) {\r\n          this.loading = false;\r\n          reject(\"Failed to load user tokens. Try again a minute later please.\")\r\n          return\r\n        }\r\n        let tokens = res.result.filter(tx => {\r\n          if (!tx.hasOwnProperty(\"to\") || tx[\"to\"].toLowerCase() != defaultAccount.toLowerCase()) {\r\n            return false\r\n          }\r\n          if (!tx.hasOwnProperty(\"contractAddress\")) {\r\n            return false\r\n          }\r\n          if (!tx.hasOwnProperty(\"tokenName\")) {\r\n            return false\r\n          }\r\n          if (!tx.hasOwnProperty(\"tokenSymbol\")) {\r\n            return false\r\n          }\r\n          if (!tx.hasOwnProperty(\"tokenDecimal\")) {\r\n            return false\r\n          }\r\n          return true\r\n        }).map(tx => {\r\n          const tokenAddress = tx[\"contractAddress\"];\r\n          const tokenName = tx[\"tokenName\"];\r\n          const tokenSymbol = tx[\"tokenSymbol\"];\r\n          const tokenDecimal = tx[\"tokenDecimal\"];\r\n          return { label: `${tokenSymbol} - ${tokenAddress}`, value: tokenAddress, tokenSymbol }\r\n        })\r\n        let tokensUniqueObj = {}\r\n        for (let i = 0; i < tokens.length; i++) {\r\n          let token = tokens[i]\r\n          tokensUniqueObj[token.value] = token\r\n        }\r\n        let tokensUnique = Object.keys(tokensUniqueObj).map(tokenAddress => tokensUniqueObj[tokenAddress])\r\n\r\n\r\n        if (('mumbai' === blockchain_network) || ('matic' === blockchain_network)) {\r\n          tokensUnique.unshift({\r\n            value: '0x000000000000000000000000000000000000bEEF',\r\n            label: \"MATIC - Polygon Native Currency\"\r\n          })\r\n        } else {\r\n          tokensUnique.unshift({\r\n            value: '0x000000000000000000000000000000000000bEEF',\r\n            label: \"ETH - Ethereum Native Currency\"\r\n          })\r\n        }\r\n        this.userTokens = tokensUnique;\r\n        this.userTokensInitialized = true\r\n        this.loading = false;\r\n        resolve(this)\r\n      }).catch((e) => {\r\n        this.loading = false;\r\n        console.error(e);\r\n        reject(e)\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nexport default Web3Store;\r\n","import { action, observable, computed } from \"mobx\";\r\nimport ERC20ABI from '../abis/ERC20ABI.json'\r\n// import StormMultiSenderABI from '../abis/StormMultisender.json'\r\nimport Web3Utils from 'web3-utils';\r\n\r\nconst BN = require('bignumber.js');\r\nfunction add(a, b) {\r\n  return new BN(a).plus(new BN(b));\r\n}\r\nclass TokenStore {\r\n  @observable decimals = '';\r\n  @observable jsonAddresses = [];\r\n  @observable tokenAddress = '';\r\n  @observable defAccTokenBalance = ''\r\n  @observable allowance = ''\r\n  @observable currentFee = '0'\r\n  @observable tokenSymbol = ''\r\n  @observable ethBalance = ''\r\n  @observable balances_to_send = []\r\n  @observable addresses_to_send = []\r\n  @observable invalid_addresses = []\r\n  @observable filteredAddresses = []\r\n  @observable totalBalance = '0'\r\n  @observable arrayLimit = 0\r\n  @observable errors = []\r\n  @observable dublicates = []\r\n\r\n  constructor(rootStore) {\r\n    this.web3Store = rootStore.web3Store;\r\n    this.gasPriceStore = rootStore.gasPriceStore;\r\n\r\n  }\r\n\r\n  async proxyMultiSenderAddress() {\r\n    try {\r\n      const web3Obj = await this.web3Store.getWeb3Promise()\r\n      const contractAddress =await this.web3Store.getMutiContractAdd(web3Obj.netIdName.toLowerCase())\r\n      return contractAddress;\r\n    } catch (ex) {\r\n      console.log(ex)\r\n    }\r\n    return \"\"\r\n  }\r\n\r\n\r\n  async getDefultAccount() {\r\n    try {\r\n      const web3Obj = await this.web3Store.getWeb3Promise()\r\n      return web3Obj.defaultAccount\r\n    } catch (ex) {\r\n      console.log(ex)\r\n    }\r\n    return \"\"\r\n  }\r\n\r\n  @action\r\n  async getDecimals(address) {\r\n    if ('' !== this.decimals) {\r\n      return this.decimals\r\n    }\r\n    try{\r\n      const web3 = this.web3Store.web3;\r\n      const token = new web3.eth.Contract(ERC20ABI, address);\r\n      this.decimals = await token.methods.decimals().call();\r\n      return this.decimals\r\n    } catch(e) {\r\n      this.errors.push('Cannot get decimals for token contract.\\n Please make sure you are on the right network and token address exists')\r\n      console.error('Get Decimals', e)\r\n    }\r\n  }\r\n\r\n  async getBalance() {\r\n    if ('' !== this.defAccTokenBalance) {\r\n      return this.defAccTokenBalance\r\n    }\r\n    try {\r\n        const web3 = this.web3Store.web3;\r\n        const token = new web3.eth.Contract(ERC20ABI, this.tokenAddress);\r\n        const defAccTokenBalance = await token.methods.balanceOf(this.web3Store.defaultAccount).call();\r\n        this.defAccTokenBalance = new BN(defAccTokenBalance).div(this.multiplier).toString(10)\r\n        web3.eth.subscribe(\"newBlockHeaders\", async (err, result) => {\r\n          if (err) {\r\n            console.log(err);\r\n            return\r\n          }\r\n          const defAccTokenBalance = await token.methods.balanceOf(this.web3Store.defaultAccount).call();\r\n          this.defAccTokenBalance = new BN(defAccTokenBalance).div(this.multiplier).toString(10)\r\n        })\r\n        return this.defAccTokenBalance\r\n    }\r\n    catch(e){\r\n      this.errors.push(`${this.web3Store.defaultAccount} doesn't have token balance.\\n Please make sure you are on the right network and token address exists`)\r\n      console.error('getBalance',e)\r\n    }\r\n  }\r\n  async getEthBalance() {\r\n    if ('' !== this.ethBalance) {\r\n      return this.ethBalance\r\n    }\r\n    try {\r\n      const web3 = this.web3Store.web3;\r\n      let ethBalance =  await web3.eth.getBalance(this.web3Store.defaultAccount)\r\n      ethBalance = Web3Utils.fromWei(ethBalance)\r\n      this.ethBalance = new BN(ethBalance).toFormat(3)\r\n      web3.eth.subscribe(\"newBlockHeaders\", async (err, result) => {\r\n        if (err) {\r\n          console.log(err);\r\n          return\r\n        }\r\n        let ethBalance =  await web3.eth.getBalance(this.web3Store.defaultAccount)\r\n        ethBalance = Web3Utils.fromWei(ethBalance)\r\n        this.ethBalance = new BN(ethBalance).toFormat(3)\r\n      })\r\n      return this.ethBalance\r\n    }\r\n    catch(e){\r\n      console.error(e)\r\n    }\r\n  }\r\n  async getTokenSymbol(tokenAddress) {\r\n    if ('' !== this.tokenSymbol) {\r\n      return this.tokenSymbol\r\n    }\r\n    try {\r\n      const web3 = this.web3Store.web3;\r\n      const token = new web3.eth.Contract(ERC20ABI, tokenAddress);\r\n      this.tokenSymbol = await token.methods.symbol().call();\r\n      return this.tokenSymbol\r\n    }\r\n    catch(e){\r\n      this.errors.push('Token with this Address doesnt exist.\\n Please make sure you are on the right network and token address exists')\r\n      console.error(e)\r\n    }\r\n  }\r\n  @action\r\n  async getAllowance() {\r\n    if ('' !== this.allowance) {\r\n      return this.allowance\r\n    }\r\n    try {\r\n      const web3 = this.web3Store.web3;\r\n      const token = new web3.eth.Contract(ERC20ABI, this.tokenAddress);\r\n      const allowance = await token.methods.allowance(this.web3Store.defaultAccount, await this.proxyMultiSenderAddress()).call();\r\n      this.allowance = new BN(allowance).div(this.multiplier).toString(10)\r\n      web3.eth.subscribe(\"newBlockHeaders\", async (err, result) => {\r\n        if (err) {\r\n          console.log(err);\r\n          return\r\n        }\r\n        const allowance = await token.methods.allowance(this.web3Store.defaultAccount, await this.proxyMultiSenderAddress()).call();\r\n        this.allowance = new BN(allowance).div(this.multiplier).toString(10)\r\n      })\r\n      return this.allowance\r\n    }\r\n    catch(e){\r\n      this.errors.push(`Token address doesn't have allowance method.\\n Please make sure you are on the right network and token address exists.\\n\r\n         Your account: ${this.web3Store.defaultAccount}`)\r\n      console.error('GetAllowance',e)\r\n    }\r\n  }\r\n\r\n  @action\r\n  async getCurrentFee(){\r\n    // const currentFee = \"100000000000000\"; // 0.0001 ETH\r\n    // this.currentFee = Web3Utils.fromWei(currentFee)\r\n    return this.currentFee\r\n    // try {\r\n    //   this.web3Store.getWeb3Promise().then(async () => {\r\n    //     const web3 = this.web3Store.web3;\r\n    //     const multisender = new web3.eth.Contract(StormMultiSenderABI, await this.proxyMultiSenderAddress());\r\n    //     const currentFee = await multisender.methods.currentFee(this.web3Store.defaultAccount).call();\r\n    //     this.currentFee = Web3Utils.fromWei(currentFee)\r\n    //     return this.currentFee\r\n    //   })\r\n    // }\r\n    // catch(e){\r\n    //   console.error('getCurrentFee',e)\r\n    // }\r\n  }\r\n\r\n  setCurrentFee(currentFee){\r\n    this.currentFee = Web3Utils.fromWei(currentFee)\r\n  }\r\n\r\n  async getArrayLimit(){\r\n    this.arrayLimit = 200;\r\n    // this.arrayLimit = 1;\r\n    return this.arrayLimit\r\n    // try {\r\n    //   await this.web3Store.getWeb3Promise().then(async () => {\r\n    //     const web3 = this.web3Store.web3;\r\n    //     const multisender = new web3.eth.Contract(StormMultiSenderABI, await this.proxyMultiSenderAddress());\r\n    //     await multisender.methods.arrayLimit().call();\r\n    //     return this.arrayLimit\r\n    //   })\r\n    // }\r\n    // catch(e){\r\n    //   console.error('GetArrayLimit', e)\r\n    // }\r\n  }\r\n\r\n  @action\r\n  async setTokenAddress(tokenAddress) {\r\n    await this.web3Store.getWeb3Promise()\r\n    await this.getCurrentFee()\r\n    await this.getEthBalance()\r\n    await this.getArrayLimit()\r\n    this.decimals = '';\r\n    this.defAccTokenBalance = ''\r\n    this.allowance = ''\r\n    this.tokenSymbol = ''\r\n    if(Web3Utils.isAddress(this.web3Store.defaultAccount) && tokenAddress !== \"0x000000000000000000000000000000000000bEEF\"){\r\n      this.tokenAddress = tokenAddress;\r\n      await this.getDecimals(tokenAddress)\r\n      await this.getBalance()\r\n      await this.getAllowance()\r\n      await this.getTokenSymbol(tokenAddress)\r\n    } else {\r\n      this.tokenAddress = tokenAddress;\r\n      this.tokenSymbol = \"ETH\"\r\n      this.decimals = 18;\r\n      this.defAccTokenBalance = this.ethBalance;\r\n    }\r\n  }\r\n\r\n  @action\r\n  setDecimals(decimals) {\r\n    this.decimals = decimals;\r\n  }\r\n\r\n  @action\r\n  setJsonAddresses(addresses){\r\n    this.jsonAddresses = addresses;\r\n  }\r\n\r\n  @action\r\n  async reset(){\r\n    this.decimals = '';\r\n    this.jsonAddresses = [];\r\n    this.tokenAddress = '';\r\n    this.defAccTokenBalance = ''\r\n    this.allowance = ''\r\n    this.currentFee = '0'\r\n    this.tokenSymbol = ''\r\n    this.ethBalance = ''\r\n    this.balances_to_send = []\r\n    this.addresses_to_send = []\r\n    this.invalid_addresses = []\r\n    this.filteredAddresses = []\r\n    this.totalBalance = '0'\r\n    this.arrayLimit = 0\r\n    this.errors = []\r\n    this.dublicates = []\r\n  }\r\n\r\n  @action\r\n  async parseAddresses(){\r\n    this.addresses_to_send = []\r\n    this.dublicates = []\r\n    this.totalBalance = 0;\r\n    this.invalid_addresses = [];\r\n    this.balances_to_send = [];\r\n    return new Promise((res, rej) => {\r\n      try {\r\n        this.jsonAddresses.forEach((account, index) => {\r\n          if(Object.keys(account).length === 0){\r\n            rej({message: `There was an error parsing ${JSON.stringify(account)} at line ${index}`})\r\n          }\r\n          let address = Object.keys(account)[0].replace(/\\s/g, \"\").replace(\"0X\", \"0x\")\r\n          address = Web3Utils.toChecksumAddress(address)\r\n          if(!Web3Utils.isAddress(address)){\r\n            this.invalid_addresses.push(address);\r\n          } else {\r\n            let balance = Object.values(account)[0];\r\n            this.totalBalance = new BN(balance).plus(this.totalBalance).toString(10)\r\n            // console.log('balance,', balance)\r\n            balance = this.multiplier.times(balance);\r\n            const indexAddr = this.addresses_to_send.indexOf(address);\r\n            if(indexAddr === -1){\r\n              this.addresses_to_send.push(address);\r\n              this.balances_to_send.push(balance.toString(10))\r\n            } else {\r\n              if(this.dublicates.indexOf(address) === -1){\r\n                this.dublicates.push(address);\r\n              }\r\n              this.balances_to_send[indexAddr] = (new BN(this.balances_to_send[indexAddr]).plus(balance)).toString(10)\r\n            }\r\n          }\r\n        })\r\n\r\n        this.jsonAddresses = this.addresses_to_send.map((addr, index) => {\r\n          let obj = {}\r\n          obj[addr] = (new BN(this.balances_to_send[index]).div(this.multiplier)).toString(10)\r\n          return obj;\r\n        })\r\n        res(this.jsonAddresses)\r\n        if(this.tokenAddress === \"0x000000000000000000000000000000000000bEEF\") {\r\n          this.allowance = this.totalBalance\r\n        }\r\n      } catch(e){\r\n        rej(e)\r\n      }\r\n    })\r\n  }\r\n\r\n  @computed get totalBalanceWithDecimals() {\r\n    return new BN(this.totalBalance).times(this.multiplier).toString(10)\r\n  }\r\n  @computed get multiplier(){\r\n    const decimals = Number(this.decimals)\r\n    return new BN(10).pow(decimals)\r\n  }\r\n\r\n  @computed get totalNumberTx() {\r\n    return Math.ceil(this.jsonAddresses.length/this.arrayLimit);\r\n  }\r\n\r\n  @computed get addressesData() {\r\n    return this.jsonAddresses.map((account) => {\r\n      const address = Object.keys(account)[0].replace(/\\s/g, \"\");;\r\n      const balance = Object.values(account)[0];\r\n      return {address, balance}\r\n    })\r\n  }\r\n\r\n  // @computed get totalCostInEth(){\r\n  //   const standardGasPrice = Web3Utils.toWei(this.gasPriceStore.selectedGasPrice.toString(), 'gwei');\r\n  //   const currentFeeInWei = Web3Utils.toWei(this.currentFee);\r\n  //   const tx = new BN(standardGasPrice).times(new BN('5000000'))\r\n  //   const txFeeMiners = tx.times(new BN(this.totalNumberTx))\r\n  //   const contractFee = new BN(currentFeeInWei).times(this.totalNumberTx);\r\n  //\r\n  //   return Web3Utils.fromWei(txFeeMiners.plus(contractFee).toString(10))\r\n  // }\r\n\r\n}\r\n\r\nexport default TokenStore;\r\n","import { action, observable, computed } from \"mobx\";\r\nimport Web3Utils from 'web3-utils';\r\n\r\nclass GasPriceStore {\r\n  @observable gasPrices = {};\r\n  @observable loading = true;\r\n  @observable gasPricesArray = [\r\n    { label: 'fast', value: '21' },\r\n    { label: 'standard', value: '21' },\r\n    { label: 'slow', value: '21' },\r\n    { label: 'instant', value: '21' },\r\n  ];\r\n  @observable selectedGasPrice = '22'\r\n  @observable selectedGasShare = '10'\r\n  gasPricePromise = null;\r\n  constructor(rootStore) {\r\n    this.getGasPrices()\r\n  }\r\n\r\n  async getGasPrices() {\r\n    // this.gasPricePromise = fetch('https://gasprice.poa.network/').then((response) => {\r\n    //   return response.json()\r\n    // }).then((data) => {\r\n    //   this.gasPricesArray.map((v) => {\r\n    //     v.value = data[v.label]\r\n    //     v.label = `${v.label}: ${data[v.label]} gwei`\r\n    //     return v;\r\n    //   })\r\n    //   this.selectedGasPrice = data.fast;\r\n    //   this.gasPrices = data;\r\n    //   this.loading = false;\r\n    // }).catch((e) => {\r\n    //   this.loading = true;\r\n    //   console.error(e)\r\n    // })\r\n    return {\"average\":21.0,\"fast\":24.7,\"slow\":19.0};\r\n  }\r\n\r\n  @computed get standardInHex() {\r\n    const toWei = Web3Utils.toWei(this.selectedGasPrice.toString(), 'gwei')\r\n    return Web3Utils.toHex(toWei)\r\n  }\r\n  @action\r\n  setSelectedGasPrice(value) {\r\n    this.selectedGasPrice = value;\r\n  }\r\n\r\n  @action\r\n  setSelectedGasShare(value) {\r\n    this.selectedGasShare = value;\r\n  }\r\n}\r\n\r\nexport default GasPriceStore;\r\n","import { action, observable, computed, autorun, toJS } from \"mobx\";\r\nimport Web3Utils from 'web3-utils'\r\nimport ERC20ABI from \"../abis/ERC20ABI.json\"\r\nimport MultiSenderAbi from \"../abis/StormMultisender.json\"\r\nimport Web3 from \"web3\";\r\nimport { observer } from \"mobx-react\";\r\nimport swal from 'sweetalert';\r\nconst BN = require('bignumber.js');\r\n\r\n\r\nclass TxStore {\r\n  @observable txs = []\r\n  txHashToIndex = {}\r\n  @observable approval = '';\r\n  constructor(rootStore) {\r\n    this.tokenStore = rootStore.tokenStore\r\n    this.web3Store = rootStore.web3Store\r\n    this.gasPriceStore = rootStore.gasPriceStore\r\n    this.interval = null;\r\n  }\r\n\r\n  @action\r\n  async reset() {\r\n    this.txs = []\r\n    this.txHashToIndex = {}\r\n    this.approval = '';\r\n    this.keepRunning = false;\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  @action\r\n  async doSend() {\r\n    this.keepRunning = true;\r\n    this.txs = [];\r\n    this.approval = '';\r\n    if (new BN(this.tokenStore.totalBalance === \"\" ? \"0\" : this.tokenStore.totalBalance).gt(new BN(this.tokenStore.allowance === \"\" ? \"0\" : this.tokenStore.allowance))) {\r\n      this._approve();\r\n      const interval = setInterval(() => {\r\n        if (this.approval) {\r\n          const index = this.txHashToIndex[this.approval];\r\n          console.log('checking autorun', index, this.approval, this.txHashToIndex, toJS(this.txs))\r\n          if (this.txs[index] && this.txs[index].status === 'mined') {\r\n            clearInterval(interval);\r\n            console.log('lets GO!', this.tokenStore.totalNumberTx, this.tokenStore.arrayLimit)\r\n            setTimeout(() => {\r\n              this._multisend({ slice: this.tokenStore.totalNumberTx, addPerTx: this.tokenStore.arrayLimit })\r\n            }, 1000)\r\n          }\r\n        } else {\r\n          console.log('checking autorun', this.txHashToIndex, toJS(this.txs))\r\n        }\r\n      }, 3000)\r\n      this.interval = interval;\r\n    } else {\r\n      this._multisend({ slice: this.tokenStore.totalNumberTx, addPerTx: this.tokenStore.arrayLimit })\r\n    }\r\n  }\r\n\r\n  @action\r\n  async doApprove() {\r\n    this.keepRunning = true;\r\n    this.txs = [];\r\n    this.approval = '';\r\n    if (new BN(this.tokenStore.totalBalance === \"\" ? \"0\" : this.tokenStore.totalBalance).gt(new BN(this.tokenStore.allowance === \"\" ? \"0\" : this.tokenStore.allowance))) {\r\n      this._approve();\r\n      const interval = setInterval(() => {\r\n        if (this.approval) {\r\n          const index = this.txHashToIndex[this.approval];\r\n          console.log('checking autorun', index, this.approval, this.txHashToIndex, toJS(this.txs))\r\n          if (this.txs[index] && this.txs[index].status === 'mined') {\r\n            clearInterval(interval);\r\n            console.log('Approve complete')\r\n          }\r\n        } else {\r\n          console.log('checking autorun', this.txHashToIndex, toJS(this.txs))\r\n        }\r\n      }, 3000)\r\n      this.interval = interval;\r\n    }\r\n  }\r\n\r\n  async _approve() {\r\n    const index = this.txs.length;\r\n    const web3 = this.web3Store.web3;\r\n    let myGasPrice = await web3.eth.getGasPrice();\r\n    const token = new web3.eth.Contract(ERC20ABI, this.tokenStore.tokenAddress);\r\n    try {\r\n      return token.methods.approve(await this.tokenStore.proxyMultiSenderAddress(), this.tokenStore.totalBalanceWithDecimals)\r\n        .send({ from: this.web3Store.defaultAccount, gasPrice: myGasPrice })\r\n        .once('transactionHash', (hash) => {\r\n          this.approval = hash\r\n          this.txHashToIndex[hash] = index;\r\n          this.txs[index] = { status: 'pending', name: `MultiSender Approval to spend ${this.tokenStore.totalBalance} ${this.tokenStore.tokenSymbol}`, hash }\r\n        })\r\n        .once('receipt', async (receipt) => {\r\n          await this.getTxStatus(receipt.transactionHash)\r\n        })\r\n        .on('error', (error) => {\r\n          swal(\"Error!\", error.message, 'error')\r\n          console.error(error)\r\n        })\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n\r\n  }\r\n\r\n  async getApproveGas() {\r\n    const web3 = this.web3Store.web3;\r\n    const token = new web3.eth.Contract(ERC20ABI, this.tokenStore.tokenAddress);\r\n    let encodedData = await token.methods.approve(await this.tokenStore.proxyMultiSenderAddress(), this.tokenStore.totalBalanceWithDecimals).encodeABI({ from: this.web3Store.defaultAccount })\r\n    return web3.eth.estimateGas({\r\n      from: this.web3Store.defaultAccount,\r\n      data: encodedData,\r\n      to: this.tokenStore.tokenAddress,\r\n    })\r\n  }\r\n\r\n  async _getTransferGas(to, value) {\r\n    const web3 = this.web3Store.web3;\r\n    const { tokenAddress } = this.tokenStore\r\n    if (tokenAddress === \"0x000000000000000000000000000000000000bEEF\") {\r\n      return web3.eth.estimateGas({\r\n        from: this.web3Store.defaultAccount,\r\n        // data: null,\r\n        value: value,\r\n        to: to\r\n      })\r\n    } else {\r\n      const token = new web3.eth.Contract(ERC20ABI, this.tokenStore.tokenAddress);\r\n      const encodedData = await token.methods.transfer(to, value).encodeABI({ from: this.web3Store.defaultAccount })\r\n      return await web3.eth.estimateGas({\r\n        from: this.web3Store.defaultAccount,\r\n        data: encodedData,\r\n        to: this.tokenStore.tokenAddress,\r\n      })\r\n    }\r\n  }\r\n\r\n  async getTransferGas() {\r\n    let totalGas = 0\r\n    let { addresses_to_send, balances_to_send } = this.tokenStore\r\n    for (let i = 0; i < addresses_to_send.length; i++) {\r\n      const to = addresses_to_send[i]\r\n      const value = balances_to_send[i]\r\n      totalGas += await this._getTransferGas(to, value)\r\n    }\r\n    return totalGas\r\n  }\r\n\r\n  async getMultisendGas({ slice, addPerTx }) {\r\n    let totalGas = 0\r\n\r\n    const token_address = this.tokenStore.tokenAddress\r\n    let { addresses_to_send, balances_to_send, currentFee, totalBalance } = this.tokenStore;\r\n\r\n    const start = (slice - 1) * addPerTx;\r\n    const end = slice * addPerTx;\r\n    addresses_to_send = addresses_to_send.slice(start, end);\r\n    balances_to_send = balances_to_send.slice(start, end);\r\n    const totalInWei = balances_to_send.reduce((total, val) => {\r\n      return total.plus(new BN(val));\r\n    }, new BN(\"0\"));\r\n    const balances_to_send_sum = totalInWei.toString(10)\r\n    let ethValue;\r\n    if (token_address === \"0x000000000000000000000000000000000000bEEF\") {\r\n      const totalInEth = Web3Utils.fromWei(totalInWei.toString())\r\n      ethValue = new BN(currentFee).plus(totalInEth)\r\n    } else {\r\n      ethValue = new BN(currentFee)\r\n    }\r\n    console.log('slice', slice, addresses_to_send[0], balances_to_send[0], addPerTx)\r\n    const web3 = this.web3Store.web3;\r\n    const multisender = new web3.eth.Contract(MultiSenderAbi, await this.tokenStore.proxyMultiSenderAddress());\r\n\r\n    if (token_address === \"0x000000000000000000000000000000000000bEEF\") {\r\n      const encodedData = await multisender.methods.multiTransfer_OST(addresses_to_send, balances_to_send).encodeABI({ from: this.web3Store.defaultAccount })\r\n      // console.log(\"web3.eth.estimateGas:\", web3.eth.estimateGas)\r\n      // console.log(\"web3.eth:\", web3.eth)\r\n      const gas = await web3.eth.estimateGas({\r\n        from: this.web3Store.defaultAccount,\r\n        data: encodedData,\r\n        value: Web3Utils.toHex(Web3Utils.toWei(ethValue.toString())),\r\n        to: await this.tokenStore.proxyMultiSenderAddress()\r\n      })\r\n      totalGas += gas\r\n    } else {\r\n      const encodedData = await multisender.methods.multiTransferToken_a4A(token_address, addresses_to_send, balances_to_send, balances_to_send_sum).encodeABI({ from: this.web3Store.defaultAccount })\r\n      const gas = await web3.eth.estimateGas({\r\n        from: this.web3Store.defaultAccount,\r\n        data: encodedData,\r\n        value: Web3Utils.toHex(Web3Utils.toWei(ethValue.toString())),\r\n        to: await this.tokenStore.proxyMultiSenderAddress()\r\n      })\r\n      totalGas += gas\r\n    }\r\n    slice--;\r\n    if (slice > 0) {\r\n      totalGas += await this.getMultisendGas({ slice, addPerTx });\r\n    }\r\n    return totalGas\r\n  }\r\n\r\n  async _multisend({ slice, addPerTx }) {\r\n    if (!this.keepRunning) {\r\n      return\r\n    }\r\n    const token_address = this.tokenStore.tokenAddress\r\n    let { addresses_to_send, balances_to_send, currentFee, totalBalance } = this.tokenStore;\r\n\r\n    const start = (slice - 1) * addPerTx;\r\n    const end = slice * addPerTx;\r\n    addresses_to_send = addresses_to_send.slice(start, end);\r\n    balances_to_send = balances_to_send.slice(start, end);\r\n    const totalInWei = balances_to_send.reduce((total, val) => {\r\n      return total.plus(new BN(val));\r\n    }, new BN(\"0\"));\r\n    const balances_to_send_sum = totalInWei.toString(10)\r\n    let ethValue;\r\n    if (token_address === \"0x000000000000000000000000000000000000bEEF\") {\r\n      const totalInEth = Web3Utils.fromWei(totalInWei.toString())\r\n      ethValue = new BN(currentFee).plus(totalInEth)\r\n    } else {\r\n      ethValue = new BN(currentFee)\r\n    }\r\n    console.log('slice', slice, addresses_to_send[0], balances_to_send[0], addPerTx)\r\n    const web3 = this.web3Store.web3;\r\n    const multisender = new web3.eth.Contract(MultiSenderAbi, await this.tokenStore.proxyMultiSenderAddress());\r\n\r\n    try {\r\n      if (token_address === \"0x000000000000000000000000000000000000bEEF\") {\r\n        let encodedData = await multisender.methods.multiTransfer_OST(addresses_to_send, balances_to_send).encodeABI({ from: this.web3Store.defaultAccount })\r\n        let gas = await web3.eth.estimateGas({\r\n          from: this.web3Store.defaultAccount,\r\n          data: encodedData,\r\n          value: Web3Utils.toHex(Web3Utils.toWei(ethValue.toString())),\r\n          to: await this.tokenStore.proxyMultiSenderAddress()\r\n        })\r\n        console.log('gas', gas)\r\n        let myGasPrice = await web3.eth.getGasPrice();\r\n        let tx = multisender.methods.multiTransfer_OST(addresses_to_send, balances_to_send)\r\n          .send({\r\n            from: this.web3Store.defaultAccount,\r\n            gasPrice: myGasPrice,\r\n            gas: Web3Utils.toHex(gas),\r\n            value: Web3Utils.toHex(Web3Utils.toWei(ethValue.toString())),\r\n          })\r\n\r\n          .once('transactionHash', (hash) => {\r\n            this.txHashToIndex[hash] = this.txs.length\r\n            this.txs.push({\r\n              status: 'pending', name: `Sending Batch #${this.txs.length} ${this.tokenStore.tokenSymbol}\\n\r\n            From ${addresses_to_send[0].substring(0, 7)} to: ${addresses_to_send[addresses_to_send.length - 1].substring(0, 7)}\r\n          `, hash\r\n            })\r\n          })\r\n          .once('receipt', async (receipt) => {\r\n            await this.getTxStatus(receipt.transactionHash)\r\n          })\r\n          .on('error', (error) => {\r\n            swal(\"Error!\", error.message, 'error')\r\n            console.log(error)\r\n            // re-send\r\n            this._multisend({ slice, addPerTx });\r\n          })\r\n      } else {\r\n        let encodedData = await multisender.methods.multiTransferToken_a4A(token_address, addresses_to_send, balances_to_send, balances_to_send_sum).encodeABI({ from: this.web3Store.defaultAccount })\r\n        let gas = await web3.eth.estimateGas({\r\n          from: this.web3Store.defaultAccount,\r\n          data: encodedData,\r\n          value: Web3Utils.toHex(Web3Utils.toWei(ethValue.toString())),\r\n          to: await this.tokenStore.proxyMultiSenderAddress()\r\n        })\r\n        console.log('gas', gas)\r\n        let myGasPrice = await web3.eth.getGasPrice();\r\n        let tx = multisender.methods.multiTransferToken_a4A(token_address, addresses_to_send, balances_to_send, balances_to_send_sum)\r\n          .send({\r\n            from: this.web3Store.defaultAccount,\r\n            gasPrice: myGasPrice,\r\n            gas: Web3Utils.toHex(gas),\r\n            value: Web3Utils.toHex(Web3Utils.toWei(ethValue.toString())),\r\n          })\r\n\r\n          .once('transactionHash', (hash) => {\r\n            this.txHashToIndex[hash] = this.txs.length\r\n            this.txs.push({\r\n              status: 'pending', name: `Sending Batch #${this.txs.length} ${this.tokenStore.tokenSymbol}\\n\r\n            From ${addresses_to_send[0].substring(0, 7)} to: ${addresses_to_send[addresses_to_send.length - 1].substring(0, 7)}\r\n          `, hash\r\n            })\r\n          })\r\n          .once('receipt', async (receipt) => {\r\n            await this.getTxStatus(receipt.transactionHash)\r\n          })\r\n          .on('error', (error) => {\r\n            swal(\"Error!\", error.message, 'error')\r\n            console.log(error)\r\n            // re-send\r\n            this._multisend({ slice, addPerTx });\r\n          })\r\n      }\r\n      slice--;\r\n      if (slice > 0) {\r\n        this._multisend({ slice, addPerTx });\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }\r\n\r\n  async getTxReceipt(hash) {\r\n    console.log('getTxReceipt')\r\n    try {\r\n      const web3 = this.web3Store.web3;\r\n      const res = await web3.eth.getTransaction(hash);\r\n      return res;\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  }\r\n\r\n  async getTxStatus(hash) {\r\n    console.log('GET TX STATUS', hash)\r\n    if (!this.keepRunning) {\r\n      return\r\n    }\r\n    const index = this.txHashToIndex[hash]\r\n    const web3 = this.web3Store.web3;\r\n\r\n    const txInfo = await web3.eth.getTransaction(hash)\r\n    const receipt = await web3.eth.getTransactionReceipt(hash)\r\n    if (receipt.hasOwnProperty(\"status\")) {\r\n      if (receipt.status === \"0x1\") {\r\n        this.txs[index].status = `mined`\r\n      } else if (receipt.status === \"0x0\") {\r\n        // if (receipt.gasUsed > txInfo.gas) {\r\n        this.txs[index].status = `error`\r\n        this.txs[index].name = `Mined but with errors. Perhaps out of gas`\r\n        // } else {\r\n        //   this.txs[index].status = `error`\r\n        //   this.txs[index].name = `Mined but with errors. Perhaps out of gas`\r\n        //   // bad tx status, not confirmed!\r\n        // }\r\n      } else {\r\n        // unknown status. pre-Byzantium\r\n        if (receipt.gasUsed >= txInfo.gas) {\r\n          this.txs[index].status = `error`\r\n          this.txs[index].name = `Mined but with errors. Perhaps out of gas`\r\n        } else {\r\n          this.txs[index].status = `mined`\r\n        }\r\n      }\r\n    } else {\r\n      // unknown status. pre-Byzantium\r\n      if (receipt.gasUsed >= txInfo.gas) {\r\n        this.txs[index].status = `error`\r\n        this.txs[index].name = `Mined but with errors. Perhaps out of gas`\r\n      } else {\r\n        this.txs[index].status = `mined`\r\n      }\r\n    }\r\n  }\r\n\r\n  // gas used by the already processed Approve tx\r\n  async getApproveTxGas() {\r\n    if ('' === this.approval) {\r\n      return 0\r\n    }\r\n    const web3 = this.web3Store.web3;\r\n    const receipt = await web3.eth.getTransactionReceipt(this.approval)\r\n    return receipt.gasUsed\r\n  }\r\n\r\n}\r\n\r\nexport default TxStore;\r\n","import Web3Store from './web3Store'\r\nimport TokenStore from './tokenStore';\r\nimport GasPriceStore from './gasPriceStore';\r\nimport TxStore from './txStore';\r\n\r\nclass UiStore {\r\n  constructor() {\r\n    this.gasPriceStore = new GasPriceStore()\r\n    this.web3Store = new Web3Store(this)\r\n    this.tokenStore = new TokenStore(this)\r\n    this.txStore = new TxStore(this)\r\n  }\r\n}\r\n\r\nexport default new UiStore();","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from \"mobx-react\";\r\nimport UiStore from \"./stores/UiStore\";\r\n\r\nconst Root = (\r\n  <Provider UiStore={UiStore}>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>\r\n);\r\nReactDOM.render(Root, document.getElementById('wp-multisender-container'));\r\n"],"sourceRoot":""}